
Main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e0  00800100  00001750  000017e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001750  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a7  008001e0  008001e0  000018c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001920  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001960  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a5c  00000000  00000000  00001a88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b68  00000000  00000000  000034e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b5c  00000000  00000000  0000404c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000314  00000000  00000000  00004ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000663  00000000  00000000  00004ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a9d  00000000  00000000  0000551f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005fbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__vector_18>
      4c:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__vector_19>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 e5       	ldi	r30, 0x50	; 80
     17e:	f7 e1       	ldi	r31, 0x17	; 23
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a0 3e       	cpi	r26, 0xE0	; 224
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	23 e0       	ldi	r18, 0x03	; 3
     18e:	a0 ee       	ldi	r26, 0xE0	; 224
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a7 38       	cpi	r26, 0x87	; 135
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 75 03 	call	0x6ea	; 0x6ea <main>
     1a0:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <print_int>:
	itoa(value, buffer, 10);
	uart_putc(id);
	uart_putc('=');
	uart_puts(buffer);
	uart_putc('\n');
}
     1a8:	1f 93       	push	r17
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62
     1b2:	28 97       	sbiw	r28, 0x08	; 8
     1b4:	0f b6       	in	r0, 0x3f	; 63
     1b6:	f8 94       	cli
     1b8:	de bf       	out	0x3e, r29	; 62
     1ba:	0f be       	out	0x3f, r0	; 63
     1bc:	cd bf       	out	0x3d, r28	; 61
     1be:	16 2f       	mov	r17, r22
     1c0:	4a e0       	ldi	r20, 0x0A	; 10
     1c2:	be 01       	movw	r22, r28
     1c4:	6f 5f       	subi	r22, 0xFF	; 255
     1c6:	7f 4f       	sbci	r23, 0xFF	; 255
     1c8:	0e 94 75 09 	call	0x12ea	; 0x12ea <__itoa_ncheck>
     1cc:	ce 01       	movw	r24, r28
     1ce:	01 96       	adiw	r24, 0x01	; 1
     1d0:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     1d4:	11 23       	and	r17, r17
     1d6:	21 f0       	breq	.+8      	; 0x1e0 <print_int+0x38>
     1d8:	80 e7       	ldi	r24, 0x70	; 112
     1da:	91 e0       	ldi	r25, 0x01	; 1
     1dc:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     1e0:	28 96       	adiw	r28, 0x08	; 8
     1e2:	0f b6       	in	r0, 0x3f	; 63
     1e4:	f8 94       	cli
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	0f be       	out	0x3f, r0	; 63
     1ea:	cd bf       	out	0x3d, r28	; 61
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	1f 91       	pop	r17
     1f2:	08 95       	ret

000001f4 <print_float>:
     1f4:	ff 92       	push	r15
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	cd b7       	in	r28, 0x3d	; 61
     200:	de b7       	in	r29, 0x3e	; 62
     202:	64 97       	sbiw	r28, 0x14	; 20
     204:	0f b6       	in	r0, 0x3f	; 63
     206:	f8 94       	cli
     208:	de bf       	out	0x3e, r29	; 62
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	cd bf       	out	0x3d, r28	; 61
     20e:	f4 2e       	mov	r15, r20
     210:	8e 01       	movw	r16, r28
     212:	0f 5f       	subi	r16, 0xFF	; 255
     214:	1f 4f       	sbci	r17, 0xFF	; 255
     216:	27 e0       	ldi	r18, 0x07	; 7
     218:	4a e0       	ldi	r20, 0x0A	; 10
     21a:	0e 94 37 08 	call	0x106e	; 0x106e <dtostrf>
     21e:	c8 01       	movw	r24, r16
     220:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     224:	ff 20       	and	r15, r15
     226:	21 f0       	breq	.+8      	; 0x230 <print_float+0x3c>
     228:	80 e7       	ldi	r24, 0x70	; 112
     22a:	91 e0       	ldi	r25, 0x01	; 1
     22c:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     230:	64 96       	adiw	r28, 0x14	; 20
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	f8 94       	cli
     236:	de bf       	out	0x3e, r29	; 62
     238:	0f be       	out	0x3f, r0	; 63
     23a:	cd bf       	out	0x3d, r28	; 61
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	0f 91       	pop	r16
     244:	ff 90       	pop	r15
     246:	08 95       	ret

00000248 <read_int_value>:
		}
	}	
}

unsigned long read_int_value ()
{
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
     24c:	cd b7       	in	r28, 0x3d	; 61
     24e:	de b7       	in	r29, 0x3e	; 62
     250:	60 97       	sbiw	r28, 0x10	; 16
     252:	0f b6       	in	r0, 0x3f	; 63
     254:	f8 94       	cli
     256:	de bf       	out	0x3e, r29	; 62
     258:	0f be       	out	0x3f, r0	; 63
     25a:	cd bf       	out	0x3d, r28	; 61
	char *pch;
	char cmdValue[16];
	// Find the position the equals sign is
	// in the string, keep a pointer to it
	pch = strchr(command_in, '=');
     25c:	6d e3       	ldi	r22, 0x3D	; 61
     25e:	70 e0       	ldi	r23, 0x00	; 0
     260:	8d e4       	ldi	r24, 0x4D	; 77
     262:	92 e0       	ldi	r25, 0x02	; 2
     264:	0e 94 58 09 	call	0x12b0	; 0x12b0 <strchr>
	// Copy everything after that point into
	// the buffer variable
	strcpy(cmdValue, pch+1);
     268:	bc 01       	movw	r22, r24
     26a:	6f 5f       	subi	r22, 0xFF	; 255
     26c:	7f 4f       	sbci	r23, 0xFF	; 255
     26e:	ce 01       	movw	r24, r28
     270:	01 96       	adiw	r24, 0x01	; 1
     272:	0e 94 63 09 	call	0x12c6	; 0x12c6 <strcpy>
	// Now turn this value into an integer and
	// return it to the caller.
	return atoi(cmdValue);
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	0e 94 57 08 	call	0x10ae	; 0x10ae <atoi>
     27e:	bc 01       	movw	r22, r24
     280:	99 0f       	add	r25, r25
     282:	88 0b       	sbc	r24, r24
     284:	99 0b       	sbc	r25, r25
}
     286:	60 96       	adiw	r28, 0x10	; 16
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <process_command>:

void process_command()
{
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
	uint16_t val = 0;
	switch (command_in[0]) {
     29c:	80 91 4d 02 	lds	r24, 0x024D	; 0x80024d <command_in>
     2a0:	83 35       	cpi	r24, 0x53	; 83
     2a2:	31 f0       	breq	.+12     	; 0x2b0 <process_command+0x18>
     2a4:	85 36       	cpi	r24, 0x65	; 101
     2a6:	19 f1       	breq	.+70     	; 0x2ee <process_command+0x56>
     2a8:	80 35       	cpi	r24, 0x50	; 80
     2aa:	09 f0       	breq	.+2      	; 0x2ae <process_command+0x16>
     2ac:	55 c0       	rjmp	.+170    	; 0x358 <process_command+0xc0>
     2ae:	36 c0       	rjmp	.+108    	; 0x31c <process_command+0x84>
			
		case 'S':	/* duty cycle */
		if (command_in[1] == '=') {
     2b0:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <command_in+0x1>
     2b4:	8d 33       	cpi	r24, 0x3D	; 61
     2b6:	41 f4       	brne	.+16     	; 0x2c8 <process_command+0x30>
			val = read_int_value();}
     2b8:	0e 94 24 01 	call	0x248	; 0x248 <read_int_value>
     2bc:	eb 01       	movw	r28, r22

		if (val>=0 && val<=255)
     2be:	6f 3f       	cpi	r22, 0xFF	; 255
     2c0:	71 05       	cpc	r23, r1
     2c2:	09 f0       	breq	.+2      	; 0x2c6 <process_command+0x2e>
     2c4:	78 f4       	brcc	.+30     	; 0x2e4 <process_command+0x4c>
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <process_command+0x34>
	return atoi(cmdValue);
}

void process_command()
{
	uint16_t val = 0;
     2c8:	c0 e0       	ldi	r28, 0x00	; 0
     2ca:	d0 e0       	ldi	r29, 0x00	; 0
		if (command_in[1] == '=') {
			val = read_int_value();}

		if (val>=0 && val<=255)
		{
			set_motor_speed(val);
     2cc:	8c 2f       	mov	r24, r28
     2ce:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <set_motor_speed>
			uart_puts("Speed = ");
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			print_int(val, TRUE);
     2da:	61 e0       	ldi	r22, 0x01	; 1
     2dc:	ce 01       	movw	r24, r28
     2de:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     2e2:	50 c0       	rjmp	.+160    	; 0x384 <process_command+0xec>
		}
		else
		{
			uart_puts("Speed not in range of 0-255\n");
     2e4:	89 e0       	ldi	r24, 0x09	; 9
     2e6:	91 e0       	ldi	r25, 0x01	; 1
     2e8:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     2ec:	4b c0       	rjmp	.+150    	; 0x384 <process_command+0xec>
		}
		break;	
		
		case 'e':	/* direction test */
		if (command_in[1] == '=') {
     2ee:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <command_in+0x1>
     2f2:	8d 33       	cpi	r24, 0x3D	; 61
     2f4:	41 f4       	brne	.+16     	; 0x306 <process_command+0x6e>
		val = read_int_value();}
     2f6:	0e 94 24 01 	call	0x248	; 0x248 <read_int_value>
     2fa:	eb 01       	movw	r28, r22

		if (val>=0 && val<=100)
     2fc:	65 36       	cpi	r22, 0x65	; 101
     2fe:	71 05       	cpc	r23, r1
     300:	08 f0       	brcs	.+2      	; 0x304 <process_command+0x6c>
     302:	40 c0       	rjmp	.+128    	; 0x384 <process_command+0xec>
     304:	02 c0       	rjmp	.+4      	; 0x30a <process_command+0x72>
	return atoi(cmdValue);
}

void process_command()
{
	uint16_t val = 0;
     306:	c0 e0       	ldi	r28, 0x00	; 0
     308:	d0 e0       	ldi	r29, 0x00	; 0
		if (command_in[1] == '=') {
		val = read_int_value();}

		if (val>=0 && val<=100)
		{
			uart_puts("e value = ");
     30a:	86 e2       	ldi	r24, 0x26	; 38
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			print_int(val, TRUE);
     312:	61 e0       	ldi	r22, 0x01	; 1
     314:	ce 01       	movw	r24, r28
     316:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     31a:	34 c0       	rjmp	.+104    	; 0x384 <process_command+0xec>
		}
		break;
		
		case 'P':	/* Setpoint Angle */
		if (command_in[1] == '=') {
     31c:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <command_in+0x1>
     320:	8d 33       	cpi	r24, 0x3D	; 61
     322:	41 f4       	brne	.+16     	; 0x334 <process_command+0x9c>
		val = read_int_value();}
     324:	0e 94 24 01 	call	0x248	; 0x248 <read_int_value>
     328:	eb 01       	movw	r28, r22

		if (val>=0 && val<=255)
     32a:	6f 3f       	cpi	r22, 0xFF	; 255
     32c:	71 05       	cpc	r23, r1
     32e:	09 f0       	breq	.+2      	; 0x332 <process_command+0x9a>
     330:	70 f4       	brcc	.+28     	; 0x34e <process_command+0xb6>
     332:	02 c0       	rjmp	.+4      	; 0x338 <process_command+0xa0>
	return atoi(cmdValue);
}

void process_command()
{
	uint16_t val = 0;
     334:	c0 e0       	ldi	r28, 0x00	; 0
     336:	d0 e0       	ldi	r29, 0x00	; 0
		if (command_in[1] == '=') {
		val = read_int_value();}

		if (val>=0 && val<=255)
		{
			device.setpoint_angle = val;
     338:	c0 93 7c 03 	sts	0x037C, r28	; 0x80037c <device+0x2>
			uart_puts("Setpoint = ");
     33c:	81 e3       	ldi	r24, 0x31	; 49
     33e:	91 e0       	ldi	r25, 0x01	; 1
     340:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			print_int(val, TRUE);
     344:	61 e0       	ldi	r22, 0x01	; 1
     346:	ce 01       	movw	r24, r28
     348:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     34c:	1b c0       	rjmp	.+54     	; 0x384 <process_command+0xec>
		}
		else
		{
			uart_puts("Setpoint not in range 0-255\n");
     34e:	8d e3       	ldi	r24, 0x3D	; 61
     350:	91 e0       	ldi	r25, 0x01	; 1
     352:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     356:	16 c0       	rjmp	.+44     	; 0x384 <process_command+0xec>
		}
		break;
					
		default:
		uart_puts("No valid command:");
     358:	8a e5       	ldi	r24, 0x5A	; 90
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
		uart_putc(command_in[0]);
     360:	cd e4       	ldi	r28, 0x4D	; 77
     362:	d2 e0       	ldi	r29, 0x02	; 2
     364:	88 81       	ld	r24, Y
     366:	0e 94 50 04 	call	0x8a0	; 0x8a0 <uart_putc>
		uart_puts(" (");
     36a:	8c e6       	ldi	r24, 0x6C	; 108
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
		print_int(command_in[0], 0);
     372:	88 81       	ld	r24, Y
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
		uart_puts(")\n");
     37c:	8f e6       	ldi	r24, 0x6F	; 111
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
		break;
		
	}
	command_ready = FALSE;
     384:	10 92 15 03 	sts	0x0315, r1	; 0x800315 <command_ready>
}
     388:	df 91       	pop	r29
     38a:	cf 91       	pop	r28
     38c:	08 95       	ret

0000038e <get_serial>:
	uart_puts(buffer);
	uart_putc('\n');
}

void get_serial(void)
{
     38e:	cf 93       	push	r28
	unsigned int c = uart_getc();
     390:	0e 94 37 04 	call	0x86e	; 0x86e <uart_getc>
	if (!(c & UART_NO_DATA)	// If data is correct
	&&	!(c & UART_FRAME_ERROR)
	&&	!(c & UART_OVERRUN_ERROR)
	&&	!(c & UART_BUFFER_OVERFLOW)
     394:	9c 01       	movw	r18, r24
     396:	22 27       	eor	r18, r18
     398:	3b 71       	andi	r19, 0x1B	; 27
     39a:	23 2b       	or	r18, r19
     39c:	d9 f5       	brne	.+118    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
	)
	{
		command_in[data_count] = c;
     39e:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <data_count>
     3a2:	f0 e0       	ldi	r31, 0x00	; 0
     3a4:	e3 5b       	subi	r30, 0xB3	; 179
     3a6:	fd 4f       	sbci	r31, 0xFD	; 253
     3a8:	80 83       	st	Z, r24
		if (command_in[data_count] == '\n')
     3aa:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <data_count>
     3ae:	f0 e0       	ldi	r31, 0x00	; 0
     3b0:	e3 5b       	subi	r30, 0xB3	; 179
     3b2:	fd 4f       	sbci	r31, 0xFD	; 253
     3b4:	80 81       	ld	r24, Z
     3b6:	8a 30       	cpi	r24, 0x0A	; 10
     3b8:	41 f5       	brne	.+80     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		{
			uart_puts("Received =<");
     3ba:	82 e7       	ldi	r24, 0x72	; 114
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			for(uint8_t i=0; i<data_count; i++) {
     3c2:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <data_count>
     3c6:	88 23       	and	r24, r24
     3c8:	69 f0       	breq	.+26     	; 0x3e4 <get_serial+0x56>
     3ca:	c0 e0       	ldi	r28, 0x00	; 0
				uart_putc(command_in[i]);
     3cc:	ec 2f       	mov	r30, r28
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	e3 5b       	subi	r30, 0xB3	; 179
     3d2:	fd 4f       	sbci	r31, 0xFD	; 253
     3d4:	80 81       	ld	r24, Z
     3d6:	0e 94 50 04 	call	0x8a0	; 0x8a0 <uart_putc>
	{
		command_in[data_count] = c;
		if (command_in[data_count] == '\n')
		{
			uart_puts("Received =<");
			for(uint8_t i=0; i<data_count; i++) {
     3da:	cf 5f       	subi	r28, 0xFF	; 255
     3dc:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <data_count>
     3e0:	c8 17       	cp	r28, r24
     3e2:	a0 f3       	brcs	.-24     	; 0x3cc <get_serial+0x3e>
				uart_putc(command_in[i]);
			}
			uart_puts(">\n");
     3e4:	8e e7       	ldi	r24, 0x7E	; 126
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			
			command_ready = TRUE;
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <command_ready>
			process_command();
     3f2:	0e 94 4c 01 	call	0x298	; 0x298 <process_command>
			data_count = 0;	// reset
     3f6:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <data_count>
			memset(command_in, 0, sizeof(command_in));	// set command to 0
     3fa:	84 e6       	ldi	r24, 0x64	; 100
     3fc:	ed e4       	ldi	r30, 0x4D	; 77
     3fe:	f2 e0       	ldi	r31, 0x02	; 2
     400:	df 01       	movw	r26, r30
     402:	1d 92       	st	X+, r1
     404:	8a 95       	dec	r24
     406:	e9 f7       	brne	.-6      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     408:	05 c0       	rjmp	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
		}
		else
		{
			data_count++;
     40a:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <data_count>
     40e:	8f 5f       	subi	r24, 0xFF	; 255
     410:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <data_count>
		}
	}	
}
     414:	cf 91       	pop	r28
     416:	08 95       	ret

00000418 <init_io>:
}

uint16_t calculate_error(void)
{
	return 0;
}
     418:	24 9a       	sbi	0x04, 4	; 4
     41a:	53 9a       	sbi	0x0a, 3	; 10
     41c:	21 9a       	sbi	0x04, 1	; 4
     41e:	55 9a       	sbi	0x0a, 5	; 10
     420:	08 95       	ret

00000422 <init_int>:
     422:	e0 eb       	ldi	r30, 0xB0	; 176
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 62       	ori	r24, 0x20	; 32
     42a:	80 83       	st	Z, r24
     42c:	80 81       	ld	r24, Z
     42e:	83 60       	ori	r24, 0x03	; 3
     430:	80 83       	st	Z, r24
     432:	e1 eb       	ldi	r30, 0xB1	; 177
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	80 81       	ld	r24, Z
     438:	82 60       	ori	r24, 0x02	; 2
     43a:	80 83       	st	Z, r24
     43c:	e1 e8       	ldi	r30, 0x81	; 129
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	88 60       	ori	r24, 0x08	; 8
     444:	80 83       	st	Z, r24
     446:	80 81       	ld	r24, Z
     448:	85 60       	ori	r24, 0x05	; 5
     44a:	80 83       	st	Z, r24
     44c:	ef e6       	ldi	r30, 0x6F	; 111
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	82 60       	ori	r24, 0x02	; 2
     454:	80 83       	st	Z, r24
     456:	8b e9       	ldi	r24, 0x9B	; 155
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     45e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     462:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     466:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     46a:	78 94       	sei
     46c:	08 95       	ret

0000046e <init_adc>:
     46e:	ec e7       	ldi	r30, 0x7C	; 124
     470:	f0 e0       	ldi	r31, 0x00	; 0
     472:	80 81       	ld	r24, Z
     474:	80 64       	ori	r24, 0x40	; 64
     476:	80 83       	st	Z, r24
     478:	ea e7       	ldi	r30, 0x7A	; 122
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	80 81       	ld	r24, Z
     47e:	87 60       	ori	r24, 0x07	; 7
     480:	80 83       	st	Z, r24
     482:	80 81       	ld	r24, Z
     484:	80 68       	ori	r24, 0x80	; 128
     486:	80 83       	st	Z, r24
     488:	08 95       	ret

0000048a <read_adc>:
     48a:	ec e7       	ldi	r30, 0x7C	; 124
     48c:	f0 e0       	ldi	r31, 0x00	; 0
     48e:	90 81       	ld	r25, Z
     490:	90 7f       	andi	r25, 0xF0	; 240
     492:	8f 70       	andi	r24, 0x0F	; 15
     494:	89 2b       	or	r24, r25
     496:	80 83       	st	Z, r24
     498:	ea e7       	ldi	r30, 0x7A	; 122
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	80 81       	ld	r24, Z
     49e:	80 64       	ori	r24, 0x40	; 64
     4a0:	80 83       	st	Z, r24
     4a2:	80 81       	ld	r24, Z
     4a4:	86 fd       	sbrc	r24, 6
     4a6:	fd cf       	rjmp	.-6      	; 0x4a2 <read_adc+0x18>
     4a8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4ac:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4b0:	08 95       	ret

000004b2 <__vector_11>:
     4b2:	1f 92       	push	r1
     4b4:	0f 92       	push	r0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	0f 92       	push	r0
     4ba:	11 24       	eor	r1, r1
     4bc:	2f 93       	push	r18
     4be:	3f 93       	push	r19
     4c0:	4f 93       	push	r20
     4c2:	5f 93       	push	r21
     4c4:	6f 93       	push	r22
     4c6:	7f 93       	push	r23
     4c8:	8f 93       	push	r24
     4ca:	9f 93       	push	r25
     4cc:	af 93       	push	r26
     4ce:	bf 93       	push	r27
     4d0:	ef 93       	push	r30
     4d2:	ff 93       	push	r31
     4d4:	9b b1       	in	r25, 0x0b	; 11
     4d6:	80 e2       	ldi	r24, 0x20	; 32
     4d8:	89 27       	eor	r24, r25
     4da:	8b b9       	out	0x0b, r24	; 11
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 45 02 	call	0x48a	; 0x48a <read_adc>
     4e2:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <device+0x8>
     4e6:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <device+0x7>
     4ea:	83 e0       	ldi	r24, 0x03	; 3
     4ec:	0e 94 45 02 	call	0x48a	; 0x48a <read_adc>
     4f0:	9c 01       	movw	r18, r24
     4f2:	2c 55       	subi	r18, 0x5C	; 92
     4f4:	31 40       	sbci	r19, 0x01	; 1
     4f6:	ab ea       	ldi	r26, 0xAB	; 171
     4f8:	ba ea       	ldi	r27, 0xAA	; 170
     4fa:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__umulhisi3>
     4fe:	96 95       	lsr	r25
     500:	87 95       	ror	r24
     502:	89 3c       	cpi	r24, 0xC9	; 201
     504:	91 05       	cpc	r25, r1
     506:	28 f0       	brcs	.+10     	; 0x512 <__vector_11+0x60>
     508:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <device+0x4>
     50c:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <device+0x3>
     510:	0e c0       	rjmp	.+28     	; 0x52e <__vector_11+0x7c>
     512:	8a 36       	cpi	r24, 0x6A	; 106
     514:	91 05       	cpc	r25, r1
     516:	28 f4       	brcc	.+10     	; 0x522 <__vector_11+0x70>
     518:	90 93 7e 03 	sts	0x037E, r25	; 0x80037e <device+0x4>
     51c:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <device+0x3>
     520:	06 c0       	rjmp	.+12     	; 0x52e <__vector_11+0x7c>
     522:	89 e6       	ldi	r24, 0x69	; 105
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	90 93 7e 03 	sts	0x037E, r25	; 0x80037e <device+0x4>
     52a:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <device+0x3>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <check_movement>
     534:	ff 91       	pop	r31
     536:	ef 91       	pop	r30
     538:	bf 91       	pop	r27
     53a:	af 91       	pop	r26
     53c:	9f 91       	pop	r25
     53e:	8f 91       	pop	r24
     540:	7f 91       	pop	r23
     542:	6f 91       	pop	r22
     544:	5f 91       	pop	r21
     546:	4f 91       	pop	r20
     548:	3f 91       	pop	r19
     54a:	2f 91       	pop	r18
     54c:	0f 90       	pop	r0
     54e:	0f be       	out	0x3f, r0	; 63
     550:	0f 90       	pop	r0
     552:	1f 90       	pop	r1
     554:	18 95       	reti

00000556 <print_values>:
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	81 e8       	ldi	r24, 0x81	; 129
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     562:	ca e7       	ldi	r28, 0x7A	; 122
     564:	d3 e0       	ldi	r29, 0x03	; 3
     566:	60 e0       	ldi	r22, 0x00	; 0
     568:	8f 81       	ldd	r24, Y+7	; 0x07
     56a:	98 85       	ldd	r25, Y+8	; 0x08
     56c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     570:	87 e8       	ldi	r24, 0x87	; 135
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     578:	8a 81       	ldd	r24, Y+2	; 0x02
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     582:	8e e8       	ldi	r24, 0x8E	; 142
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	8b 81       	ldd	r24, Y+3	; 0x03
     58e:	9c 81       	ldd	r25, Y+4	; 0x04
     590:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     594:	85 e9       	ldi	r24, 0x95	; 149
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     59c:	60 e0       	ldi	r22, 0x00	; 0
     59e:	8d 81       	ldd	r24, Y+5	; 0x05
     5a0:	9e 81       	ldd	r25, Y+6	; 0x06
     5a2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     5a6:	8b e9       	ldi	r24, 0x9B	; 155
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <print_int>
     5b8:	81 ea       	ldi	r24, 0xA1	; 161
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     5c0:	88 81       	ld	r24, Y
     5c2:	81 11       	cpse	r24, r1
     5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <print_values+0x7a>
     5c6:	87 ea       	ldi	r24, 0xA7	; 167
     5c8:	91 e0       	ldi	r25, 0x01	; 1
     5ca:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <print_values+0x82>
     5d0:	8d ea       	ldi	r24, 0xAD	; 173
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <set_motor_dir>:
     5de:	81 11       	cpse	r24, r1
     5e0:	03 c0       	rjmp	.+6      	; 0x5e8 <set_motor_dir+0xa>
     5e2:	90 e1       	ldi	r25, 0x10	; 16
     5e4:	95 b9       	out	0x05, r25	; 5
     5e6:	03 c0       	rjmp	.+6      	; 0x5ee <set_motor_dir+0x10>
     5e8:	81 30       	cpi	r24, 0x01	; 1
     5ea:	09 f4       	brne	.+2      	; 0x5ee <set_motor_dir+0x10>
     5ec:	2c 98       	cbi	0x05, 4	; 5
     5ee:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <device>
     5f2:	08 95       	ret

000005f4 <set_motor_speed>:
     5f4:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     5f8:	80 93 7b 03 	sts	0x037B, r24	; 0x80037b <device+0x1>
     5fc:	08 95       	ret

000005fe <p_loop>:

void p_loop(void)
{
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
	uint16_t speed = 0;
	static uint16_t error_old = 0;
	uint16_t response = 0;
	static uint16_t timeout_counter;
	
	if (device.current>=device.current_limit)
     602:	ea e7       	ldi	r30, 0x7A	; 122
     604:	f3 e0       	ldi	r31, 0x03	; 3
     606:	27 81       	ldd	r18, Z+7	; 0x07
     608:	30 85       	ldd	r19, Z+8	; 0x08
     60a:	81 85       	ldd	r24, Z+9	; 0x09
     60c:	92 85       	ldd	r25, Z+10	; 0x0a
     60e:	28 17       	cp	r18, r24
     610:	39 07       	cpc	r19, r25
     612:	20 f0       	brcs	.+8      	; 0x61c <p_loop+0x1e>

void set_motor_speed(uint8_t speed)
{
	if (speed>=0 && speed<=255)
	{
		OCR2B = speed;	// set pwm duty cycle
     614:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		device.speed = speed;
     618:	11 82       	std	Z+1, r1	; 0x01
	
	if (device.current>=device.current_limit)
	{
		set_motor_speed(0);	// Turn motor off
		// TODO set brake pin
		device.movementEnabled = FALSE;
     61a:	13 86       	std	Z+11, r1	; 0x0b
	}
	
	if (device.current_angle < device.setpoint_angle)	// setpoint is further, pull
     61c:	ea e7       	ldi	r30, 0x7A	; 122
     61e:	f3 e0       	ldi	r31, 0x03	; 3
     620:	23 81       	ldd	r18, Z+3	; 0x03
     622:	34 81       	ldd	r19, Z+4	; 0x04
     624:	82 81       	ldd	r24, Z+2	; 0x02
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	28 17       	cp	r18, r24
     62a:	39 07       	cpc	r19, r25
     62c:	d8 f4       	brcc	.+54     	; 0x664 <p_loop+0x66>
	{
		device.error = (device.setpoint_angle - device.current_angle);	// Calc error
     62e:	ef 01       	movw	r28, r30
     630:	82 1b       	sub	r24, r18
     632:	93 0b       	sbc	r25, r19
     634:	96 83       	std	Z+6, r25	; 0x06
     636:	85 83       	std	Z+5, r24	; 0x05
		set_motor_dir(FORWARD);
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	0e 94 ef 02 	call	0x5de	; 0x5de <set_motor_dir>
		speed = (P_GAIN * device.error);								// calculate output pwm value
     63e:	8d 81       	ldd	r24, Y+5	; 0x05
     640:	9e 81       	ldd	r25, Y+6	; 0x06
		speed = (speed > 255) ? 255 : speed;							// limit output
		speed = (device.error<=MIN_ACT_ON_ERROR) ? 0 : speed;			// if error too small stop motor
     642:	86 30       	cpi	r24, 0x06	; 6
     644:	91 05       	cpc	r25, r1
     646:	38 f0       	brcs	.+14     	; 0x656 <p_loop+0x58>
	if (device.current_angle < device.setpoint_angle)	// setpoint is further, pull
	{
		device.error = (device.setpoint_angle - device.current_angle);	// Calc error
		set_motor_dir(FORWARD);
		speed = (P_GAIN * device.error);								// calculate output pwm value
		speed = (speed > 255) ? 255 : speed;							// limit output
     648:	8f 3f       	cpi	r24, 0xFF	; 255
     64a:	91 05       	cpc	r25, r1
     64c:	31 f0       	breq	.+12     	; 0x65a <p_loop+0x5c>
     64e:	28 f0       	brcs	.+10     	; 0x65a <p_loop+0x5c>
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	02 c0       	rjmp	.+4      	; 0x65a <p_loop+0x5c>
		speed = (device.error<=MIN_ACT_ON_ERROR) ? 0 : speed;			// if error too small stop motor
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	90 e0       	ldi	r25, 0x00	; 0

void set_motor_speed(uint8_t speed)
{
	if (speed>=0 && speed<=255)
	{
		OCR2B = speed;	// set pwm duty cycle
     65a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		device.speed = speed;
     65e:	80 93 7b 03 	sts	0x037B, r24	; 0x80037b <device+0x1>
     662:	40 c0       	rjmp	.+128    	; 0x6e4 <p_loop+0xe6>
		speed = (device.error<=MIN_ACT_ON_ERROR) ? 0 : speed;			// if error too small stop motor
		set_motor_speed(speed);	// do output
	}
	else  // past the setpoint, release
	{	
		device.error = (device.current_angle - device.setpoint_angle); // Calc error
     664:	ca e7       	ldi	r28, 0x7A	; 122
     666:	d3 e0       	ldi	r29, 0x03	; 3
     668:	28 1b       	sub	r18, r24
     66a:	39 0b       	sbc	r19, r25
     66c:	3e 83       	std	Y+6, r19	; 0x06
     66e:	2d 83       	std	Y+5, r18	; 0x05
		set_motor_dir(BACKWARD);
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	0e 94 ef 02 	call	0x5de	; 0x5de <set_motor_dir>
		speed = (P_GAIN * device.error);								// calculate output pwm value
     676:	8d 81       	ldd	r24, Y+5	; 0x05
     678:	9e 81       	ldd	r25, Y+6	; 0x06
		//speed = (speed > 255) ? 255 : speed;							// limit output
		speed = (speed > 0) ? 255 : 0;							// limit output
     67a:	86 30       	cpi	r24, 0x06	; 6
     67c:	91 05       	cpc	r25, r1
     67e:	10 f0       	brcs	.+4      	; 0x684 <p_loop+0x86>
     680:	4f ef       	ldi	r20, 0xFF	; 255
     682:	01 c0       	rjmp	.+2      	; 0x686 <p_loop+0x88>
		speed = (device.error<=MIN_ACT_ON_ERROR) ? 0 : speed;			// if error too small stop motor
     684:	40 e0       	ldi	r20, 0x00	; 0
		
		
		if (timeout_counter >= (TIMEOUT_MS/INTERRUPT_MS))	// time to check response
     686:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <timeout_counter.2555>
     68a:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <timeout_counter.2555+0x1>
     68e:	22 33       	cpi	r18, 0x32	; 50
     690:	31 05       	cpc	r19, r1
     692:	f8 f0       	brcs	.+62     	; 0x6d2 <p_loop+0xd4>
		{
			response = (device.error - error_old);
     694:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <__data_end>
     698:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <__data_end+0x1>
     69c:	bc 01       	movw	r22, r24
     69e:	62 1b       	sub	r22, r18
     6a0:	73 0b       	sbc	r23, r19
			//uart_puts("response=");
			//print_int(response, TRUE);
			error_old = device.error;	// get new old error
     6a2:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <__data_end+0x1>
     6a6:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <__data_end>
			
			if(response <= 5)		//no response
     6aa:	66 30       	cpi	r22, 0x06	; 6
     6ac:	71 05       	cpc	r23, r1
     6ae:	28 f4       	brcc	.+10     	; 0x6ba <p_loop+0xbc>

void set_motor_speed(uint8_t speed)
{
	if (speed>=0 && speed<=255)
	{
		OCR2B = speed;	// set pwm duty cycle
     6b0:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		device.speed = speed;
     6b4:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <device+0x1>
     6b8:	08 c0       	rjmp	.+16     	; 0x6ca <p_loop+0xcc>

void set_motor_speed(uint8_t speed)
{
	if (speed>=0 && speed<=255)
	{
		OCR2B = speed;	// set pwm duty cycle
     6ba:	40 93 b4 00 	sts	0x00B4, r20	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		device.speed = speed;
     6be:	40 93 7b 03 	sts	0x037B, r20	; 0x80037b <device+0x1>
				set_motor_speed(0);	// stop motor		
			}
			else
			{				
				set_motor_speed(speed);	// keep moving	
				uart_puts("ON\n");
     6c2:	86 eb       	ldi	r24, 0xB6	; 182
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
			}
			timeout_counter=0;	// reset
     6ca:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <timeout_counter.2555+0x1>
     6ce:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <timeout_counter.2555>
		}
		timeout_counter++;
     6d2:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <timeout_counter.2555>
     6d6:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <timeout_counter.2555+0x1>
     6da:	01 96       	adiw	r24, 0x01	; 1
     6dc:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <timeout_counter.2555+0x1>
     6e0:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <timeout_counter.2555>
	}
}
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	08 95       	ret

000006ea <main>:
	check_movement = TRUE;
}

int main(void)
{
	init_io();			/* Init IO*/
     6ea:	0e 94 0c 02 	call	0x418	; 0x418 <init_io>
	init_int();			/* Init int for resfresh display every x ms	*/
     6ee:	0e 94 11 02 	call	0x422	; 0x422 <init_int>
	init_adc();			/* Init ADC */	
     6f2:	0e 94 37 02 	call	0x46e	; 0x46e <init_adc>
	
	uart_init( UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU) );	/* Init Uart */
     6f6:	87 e6       	ldi	r24, 0x67	; 103
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 1e 04 	call	0x83c	; 0x83c <uart_init>
	sei();						/* Enable global interrupts for uart*/
     6fe:	78 94       	sei
	uart_puts("\n\rInit Uart OK\n");
     700:	8a eb       	ldi	r24, 0xBA	; 186
     702:	91 e0       	ldi	r25, 0x01	; 1
     704:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
	
	device.current_limit = 500;	// set current limit
     708:	ca e7       	ldi	r28, 0x7A	; 122
     70a:	d3 e0       	ldi	r29, 0x03	; 3
     70c:	84 ef       	ldi	r24, 0xF4	; 244
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	9a 87       	std	Y+10, r25	; 0x0a
     712:	89 87       	std	Y+9, r24	; 0x09
	device.movementEnabled = TRUE;
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	8b 87       	std	Y+11, r24	; 0x0b

	/* Now the device is ready! */
	uart_puts("MoveItAll hand ready!");		/* Print version number	*/
     718:	8a ec       	ldi	r24, 0xCA	; 202
     71a:	91 e0       	ldi	r25, 0x01	; 1
     71c:	0e 94 65 04 	call	0x8ca	; 0x8ca <uart_puts>
	print_float(VERSION,1);
     720:	41 e0       	ldi	r20, 0x01	; 1
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	80 e8       	ldi	r24, 0x80	; 128
     728:	9f e3       	ldi	r25, 0x3F	; 63
     72a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <print_float>
	
	set_motor_dir(FALSE);
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	0e 94 ef 02 	call	0x5de	; 0x5de <set_motor_dir>

void set_motor_speed(uint8_t speed)
{
	if (speed>=0 && speed<=255)
	{
		OCR2B = speed;	// set pwm duty cycle
     734:	8f e7       	ldi	r24, 0x7F	; 127
     736:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		device.speed = speed;
     73a:	89 83       	std	Y+1, r24	; 0x01
	uart_puts("MoveItAll hand ready!");		/* Print version number	*/
	print_float(VERSION,1);
	
	set_motor_dir(FALSE);
	set_motor_speed(127);//50%
	device.setpoint_angle = 250;
     73c:	8a ef       	ldi	r24, 0xFA	; 250
     73e:	8a 83       	std	Y+2, r24	; 0x02
	
	while(1)
	{	
		get_serial();
     740:	0e 94 c7 01 	call	0x38e	; 0x38e <get_serial>
		if (command_ready) {process_command();}
     744:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <command_ready>
     748:	81 11       	cpse	r24, r1
     74a:	0e 94 4c 01 	call	0x298	; 0x298 <process_command>
		
		if (check_movement)
     74e:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <check_movement>
     752:	88 23       	and	r24, r24
     754:	21 f0       	breq	.+8      	; 0x75e <main+0x74>
		{
			p_loop();	// 	do p loop stuff
     756:	0e 94 ff 02 	call	0x5fe	; 0x5fe <p_loop>
			check_movement = FALSE;
     75a:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <check_movement>
		}
		
		if (print_counter == REFRESH_LOOP_MS)
     75e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <print_counter>
     762:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <print_counter+0x1>
     766:	84 3f       	cpi	r24, 0xF4	; 244
     768:	91 40       	sbci	r25, 0x01	; 1
     76a:	31 f4       	brne	.+12     	; 0x778 <main+0x8e>
		{
			print_values();
     76c:	0e 94 ab 02 	call	0x556	; 0x556 <print_values>
			print_counter = 0;
     770:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <print_counter+0x1>
     774:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <print_counter>
		}
		print_counter++;	
     778:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <print_counter>
     77c:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <print_counter+0x1>
     780:	01 96       	adiw	r24, 0x01	; 1
     782:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <print_counter+0x1>
     786:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <print_counter>
		
	}
     78a:	da cf       	rjmp	.-76     	; 0x740 <main+0x56>

0000078c <__vector_18>:
ISR (UART0_RECEIVE_INTERRUPT)	
/*************************************************************************
Function: UART Receive Complete interrupt
Purpose:  called when the UART has received a character
**************************************************************************/
{
     78c:	1f 92       	push	r1
     78e:	0f 92       	push	r0
     790:	0f b6       	in	r0, 0x3f	; 63
     792:	0f 92       	push	r0
     794:	11 24       	eor	r1, r1
     796:	2f 93       	push	r18
     798:	8f 93       	push	r24
     79a:	9f 93       	push	r25
     79c:	ef 93       	push	r30
     79e:	ff 93       	push	r31
    unsigned char usr;
    unsigned char lastRxError;
 
 
    /* read UART status register and UART data register */ 
    usr  = UART0_STATUS;
     7a0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    data = UART0_DATA;
     7a4:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
#if defined( AT90_UART )
    lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
#elif defined( ATMEGA_USART )
    lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
#elif defined( ATMEGA_USART0 )
    lastRxError = (usr & (_BV(FE0)|_BV(DOR0)) );
     7a8:	88 71       	andi	r24, 0x18	; 24
#elif defined( AT90USB_USART )
    lastRxError = (usr & (_BV(FE1)|_BV(DOR1)) );
#endif
        
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
     7aa:	e0 91 e9 01 	lds	r30, 0x01E9	; 0x8001e9 <UART_RxHead>
     7ae:	ef 5f       	subi	r30, 0xFF	; 255
     7b0:	ef 73       	andi	r30, 0x3F	; 63
    
    if ( tmphead == UART_RxTail ) {
     7b2:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <UART_RxTail>
     7b6:	e9 17       	cp	r30, r25
     7b8:	39 f0       	breq	.+14     	; 0x7c8 <__vector_18+0x3c>
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
    }else{
        /* store new index */
        UART_RxHead = tmphead;
     7ba:	e0 93 e9 01 	sts	0x01E9, r30	; 0x8001e9 <UART_RxHead>
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
     7be:	f0 e0       	ldi	r31, 0x00	; 0
     7c0:	e4 51       	subi	r30, 0x14	; 20
     7c2:	fe 4f       	sbci	r31, 0xFE	; 254
     7c4:	20 83       	st	Z, r18
     7c6:	01 c0       	rjmp	.+2      	; 0x7ca <__vector_18+0x3e>
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
    
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
     7c8:	82 e0       	ldi	r24, 0x02	; 2
        /* store new index */
        UART_RxHead = tmphead;
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
    }
    UART_LastRxError |= lastRxError;   
     7ca:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <UART_LastRxError>
     7ce:	89 2b       	or	r24, r25
     7d0:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <UART_LastRxError>
}
     7d4:	ff 91       	pop	r31
     7d6:	ef 91       	pop	r30
     7d8:	9f 91       	pop	r25
     7da:	8f 91       	pop	r24
     7dc:	2f 91       	pop	r18
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <__vector_19>:
ISR (UART0_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART Data Register Empty interrupt
Purpose:  called when the UART is ready to transmit the next byte
**************************************************************************/
{
     7e8:	1f 92       	push	r1
     7ea:	0f 92       	push	r0
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	0f 92       	push	r0
     7f0:	11 24       	eor	r1, r1
     7f2:	8f 93       	push	r24
     7f4:	9f 93       	push	r25
     7f6:	ef 93       	push	r30
     7f8:	ff 93       	push	r31
    unsigned char tmptail;

    
    if ( UART_TxHead != UART_TxTail) {
     7fa:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <UART_TxHead>
     7fe:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <UART_TxTail>
     802:	98 17       	cp	r25, r24
     804:	69 f0       	breq	.+26     	; 0x820 <__vector_19+0x38>
        /* calculate and store new buffer index */
        tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
     806:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <UART_TxTail>
     80a:	ef 5f       	subi	r30, 0xFF	; 255
     80c:	ef 71       	andi	r30, 0x1F	; 31
        UART_TxTail = tmptail;
     80e:	e0 93 ea 01 	sts	0x01EA, r30	; 0x8001ea <UART_TxTail>
        /* get one byte from buffer and write it to UART */
        UART0_DATA = UART_TxBuf[tmptail];  /* start transmission */
     812:	f0 e0       	ldi	r31, 0x00	; 0
     814:	e4 5d       	subi	r30, 0xD4	; 212
     816:	fd 4f       	sbci	r31, 0xFD	; 253
     818:	80 81       	ld	r24, Z
     81a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     81e:	05 c0       	rjmp	.+10     	; 0x82a <__vector_19+0x42>
    }else{
        /* tx buffer empty, disable UDRE interrupt */
        UART0_CONTROL &= ~_BV(UART0_UDRIE);
     820:	e1 ec       	ldi	r30, 0xC1	; 193
     822:	f0 e0       	ldi	r31, 0x00	; 0
     824:	80 81       	ld	r24, Z
     826:	8f 7d       	andi	r24, 0xDF	; 223
     828:	80 83       	st	Z, r24
    }
}
     82a:	ff 91       	pop	r31
     82c:	ef 91       	pop	r30
     82e:	9f 91       	pop	r25
     830:	8f 91       	pop	r24
     832:	0f 90       	pop	r0
     834:	0f be       	out	0x3f, r0	; 63
     836:	0f 90       	pop	r0
     838:	1f 90       	pop	r1
     83a:	18 95       	reti

0000083c <uart_init>:
Input:    baudrate using macro UART_BAUD_SELECT()
Returns:  none
**************************************************************************/
void uart_init(unsigned int baudrate)
{
    UART_TxHead = 0;
     83c:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <UART_TxHead>
    UART_TxTail = 0;
     840:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <UART_TxTail>
    UART_RxHead = 0;
     844:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <UART_RxHead>
    UART_RxTail = 0;
     848:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <UART_RxTail>
    UCSRC = (3<<UCSZ0);
    #endif 
    
#elif defined (ATMEGA_USART0 )
    /* Set baud rate */
    if ( baudrate & 0x8000 ) 
     84c:	99 23       	and	r25, r25
     84e:	24 f4       	brge	.+8      	; 0x858 <uart_init+0x1c>
    {
   		UART0_STATUS = (1<<U2X0);  //Enable 2x speed 
     850:	22 e0       	ldi	r18, 0x02	; 2
     852:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
   		baudrate &= ~0x8000;
     856:	9f 77       	andi	r25, 0x7F	; 127
   	}
    UBRR0H = (unsigned char)(baudrate>>8);
     858:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = (unsigned char) baudrate;
     85c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

    /* Enable USART receiver and transmitter and receive complete interrupt */
    UART0_CONTROL = _BV(RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
     860:	88 e9       	ldi	r24, 0x98	; 152
     862:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    /* Set frame format: asynchronous, 8data, no parity, 1stop bit */
    #ifdef URSEL0
    UCSR0C = (1<<URSEL0)|(3<<UCSZ00);
    #else
    UCSR0C = (3<<UCSZ00);
     866:	86 e0       	ldi	r24, 0x06	; 6
     868:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     86c:	08 95       	ret

0000086e <uart_getc>:
{    
    unsigned char tmptail;
    unsigned char data;


    if ( UART_RxHead == UART_RxTail ) {
     86e:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <UART_RxHead>
     872:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <UART_RxTail>
     876:	98 17       	cp	r25, r24
     878:	81 f0       	breq	.+32     	; 0x89a <uart_getc+0x2c>
        return UART_NO_DATA;   /* no data available */
    }
    
    /* calculate /store buffer index */
    tmptail = (UART_RxTail + 1) & UART_RX_BUFFER_MASK;
     87a:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <UART_RxTail>
     87e:	ef 5f       	subi	r30, 0xFF	; 255
     880:	ef 73       	andi	r30, 0x3F	; 63
    UART_RxTail = tmptail; 
     882:	e0 93 e8 01 	sts	0x01E8, r30	; 0x8001e8 <UART_RxTail>
    
    /* get data from receive buffer */
    data = UART_RxBuf[tmptail];
     886:	f0 e0       	ldi	r31, 0x00	; 0
     888:	e4 51       	subi	r30, 0x14	; 20
     88a:	fe 4f       	sbci	r31, 0xFE	; 254
     88c:	80 81       	ld	r24, Z
    
    data = (UART_LastRxError << 8) + data;
     88e:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <UART_LastRxError>
    UART_LastRxError = 0;
     892:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <UART_LastRxError>
    return data;
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	08 95       	ret
    unsigned char tmptail;
    unsigned char data;


    if ( UART_RxHead == UART_RxTail ) {
        return UART_NO_DATA;   /* no data available */
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	91 e0       	ldi	r25, 0x01	; 1
    
    data = (UART_LastRxError << 8) + data;
    UART_LastRxError = 0;
    return data;

}/* uart_getc */
     89e:	08 95       	ret

000008a0 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
     8a0:	20 91 eb 01 	lds	r18, 0x01EB	; 0x8001eb <UART_TxHead>
     8a4:	2f 5f       	subi	r18, 0xFF	; 255
     8a6:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
     8a8:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <UART_TxTail>
     8ac:	29 17       	cp	r18, r25
     8ae:	e1 f3       	breq	.-8      	; 0x8a8 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
     8b0:	e2 2f       	mov	r30, r18
     8b2:	f0 e0       	ldi	r31, 0x00	; 0
     8b4:	e4 5d       	subi	r30, 0xD4	; 212
     8b6:	fd 4f       	sbci	r31, 0xFD	; 253
     8b8:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
     8ba:	20 93 eb 01 	sts	0x01EB, r18	; 0x8001eb <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
     8be:	e1 ec       	ldi	r30, 0xC1	; 193
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	80 81       	ld	r24, Z
     8c4:	80 62       	ori	r24, 0x20	; 32
     8c6:	80 83       	st	Z, r24
     8c8:	08 95       	ret

000008ca <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	ec 01       	movw	r28, r24
    while (*s) 
     8d0:	88 81       	ld	r24, Y
     8d2:	88 23       	and	r24, r24
     8d4:	31 f0       	breq	.+12     	; 0x8e2 <uart_puts+0x18>
     8d6:	21 96       	adiw	r28, 0x01	; 1
      uart_putc(*s++);
     8d8:	0e 94 50 04 	call	0x8a0	; 0x8a0 <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
     8dc:	89 91       	ld	r24, Y+
     8de:	81 11       	cpse	r24, r1
     8e0:	fb cf       	rjmp	.-10     	; 0x8d8 <uart_puts+0xe>
      uart_putc(*s++);

}/* uart_puts */
     8e2:	df 91       	pop	r29
     8e4:	cf 91       	pop	r28
     8e6:	08 95       	ret

000008e8 <vfprintf>:
     8e8:	a0 e1       	ldi	r26, 0x10	; 16
     8ea:	b0 e0       	ldi	r27, 0x00	; 0
     8ec:	ea e7       	ldi	r30, 0x7A	; 122
     8ee:	f4 e0       	ldi	r31, 0x04	; 4
     8f0:	0c 94 00 08 	jmp	0x1000	; 0x1000 <__prologue_saves__>
     8f4:	7c 01       	movw	r14, r24
     8f6:	1b 01       	movw	r2, r22
     8f8:	6a 01       	movw	r12, r20
     8fa:	fc 01       	movw	r30, r24
     8fc:	17 82       	std	Z+7, r1	; 0x07
     8fe:	16 82       	std	Z+6, r1	; 0x06
     900:	83 81       	ldd	r24, Z+3	; 0x03
     902:	81 ff       	sbrs	r24, 1
     904:	44 c3       	rjmp	.+1672   	; 0xf8e <__stack+0x68f>
     906:	9e 01       	movw	r18, r28
     908:	2f 5f       	subi	r18, 0xFF	; 255
     90a:	3f 4f       	sbci	r19, 0xFF	; 255
     90c:	39 01       	movw	r6, r18
     90e:	f7 01       	movw	r30, r14
     910:	93 81       	ldd	r25, Z+3	; 0x03
     912:	f1 01       	movw	r30, r2
     914:	93 fd       	sbrc	r25, 3
     916:	85 91       	lpm	r24, Z+
     918:	93 ff       	sbrs	r25, 3
     91a:	81 91       	ld	r24, Z+
     91c:	1f 01       	movw	r2, r30
     91e:	88 23       	and	r24, r24
     920:	09 f4       	brne	.+2      	; 0x924 <__stack+0x25>
     922:	31 c3       	rjmp	.+1634   	; 0xf86 <__stack+0x687>
     924:	85 32       	cpi	r24, 0x25	; 37
     926:	39 f4       	brne	.+14     	; 0x936 <__stack+0x37>
     928:	93 fd       	sbrc	r25, 3
     92a:	85 91       	lpm	r24, Z+
     92c:	93 ff       	sbrs	r25, 3
     92e:	81 91       	ld	r24, Z+
     930:	1f 01       	movw	r2, r30
     932:	85 32       	cpi	r24, 0x25	; 37
     934:	39 f4       	brne	.+14     	; 0x944 <__stack+0x45>
     936:	b7 01       	movw	r22, r14
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     93e:	56 01       	movw	r10, r12
     940:	65 01       	movw	r12, r10
     942:	e5 cf       	rjmp	.-54     	; 0x90e <__stack+0xf>
     944:	10 e0       	ldi	r17, 0x00	; 0
     946:	51 2c       	mov	r5, r1
     948:	91 2c       	mov	r9, r1
     94a:	ff e1       	ldi	r31, 0x1F	; 31
     94c:	f9 15       	cp	r31, r9
     94e:	d8 f0       	brcs	.+54     	; 0x986 <__stack+0x87>
     950:	8b 32       	cpi	r24, 0x2B	; 43
     952:	79 f0       	breq	.+30     	; 0x972 <__stack+0x73>
     954:	38 f4       	brcc	.+14     	; 0x964 <__stack+0x65>
     956:	80 32       	cpi	r24, 0x20	; 32
     958:	79 f0       	breq	.+30     	; 0x978 <__stack+0x79>
     95a:	83 32       	cpi	r24, 0x23	; 35
     95c:	a1 f4       	brne	.+40     	; 0x986 <__stack+0x87>
     95e:	f9 2d       	mov	r31, r9
     960:	f0 61       	ori	r31, 0x10	; 16
     962:	2e c0       	rjmp	.+92     	; 0x9c0 <__stack+0xc1>
     964:	8d 32       	cpi	r24, 0x2D	; 45
     966:	61 f0       	breq	.+24     	; 0x980 <__stack+0x81>
     968:	80 33       	cpi	r24, 0x30	; 48
     96a:	69 f4       	brne	.+26     	; 0x986 <__stack+0x87>
     96c:	29 2d       	mov	r18, r9
     96e:	21 60       	ori	r18, 0x01	; 1
     970:	2d c0       	rjmp	.+90     	; 0x9cc <__stack+0xcd>
     972:	39 2d       	mov	r19, r9
     974:	32 60       	ori	r19, 0x02	; 2
     976:	93 2e       	mov	r9, r19
     978:	89 2d       	mov	r24, r9
     97a:	84 60       	ori	r24, 0x04	; 4
     97c:	98 2e       	mov	r9, r24
     97e:	2a c0       	rjmp	.+84     	; 0x9d4 <__stack+0xd5>
     980:	e9 2d       	mov	r30, r9
     982:	e8 60       	ori	r30, 0x08	; 8
     984:	15 c0       	rjmp	.+42     	; 0x9b0 <__stack+0xb1>
     986:	97 fc       	sbrc	r9, 7
     988:	2d c0       	rjmp	.+90     	; 0x9e4 <__stack+0xe5>
     98a:	20 ed       	ldi	r18, 0xD0	; 208
     98c:	28 0f       	add	r18, r24
     98e:	2a 30       	cpi	r18, 0x0A	; 10
     990:	88 f4       	brcc	.+34     	; 0x9b4 <__stack+0xb5>
     992:	96 fe       	sbrs	r9, 6
     994:	06 c0       	rjmp	.+12     	; 0x9a2 <__stack+0xa3>
     996:	3a e0       	ldi	r19, 0x0A	; 10
     998:	13 9f       	mul	r17, r19
     99a:	20 0d       	add	r18, r0
     99c:	11 24       	eor	r1, r1
     99e:	12 2f       	mov	r17, r18
     9a0:	19 c0       	rjmp	.+50     	; 0x9d4 <__stack+0xd5>
     9a2:	8a e0       	ldi	r24, 0x0A	; 10
     9a4:	58 9e       	mul	r5, r24
     9a6:	20 0d       	add	r18, r0
     9a8:	11 24       	eor	r1, r1
     9aa:	52 2e       	mov	r5, r18
     9ac:	e9 2d       	mov	r30, r9
     9ae:	e0 62       	ori	r30, 0x20	; 32
     9b0:	9e 2e       	mov	r9, r30
     9b2:	10 c0       	rjmp	.+32     	; 0x9d4 <__stack+0xd5>
     9b4:	8e 32       	cpi	r24, 0x2E	; 46
     9b6:	31 f4       	brne	.+12     	; 0x9c4 <__stack+0xc5>
     9b8:	96 fc       	sbrc	r9, 6
     9ba:	e5 c2       	rjmp	.+1482   	; 0xf86 <__stack+0x687>
     9bc:	f9 2d       	mov	r31, r9
     9be:	f0 64       	ori	r31, 0x40	; 64
     9c0:	9f 2e       	mov	r9, r31
     9c2:	08 c0       	rjmp	.+16     	; 0x9d4 <__stack+0xd5>
     9c4:	8c 36       	cpi	r24, 0x6C	; 108
     9c6:	21 f4       	brne	.+8      	; 0x9d0 <__stack+0xd1>
     9c8:	29 2d       	mov	r18, r9
     9ca:	20 68       	ori	r18, 0x80	; 128
     9cc:	92 2e       	mov	r9, r18
     9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <__stack+0xd5>
     9d0:	88 36       	cpi	r24, 0x68	; 104
     9d2:	41 f4       	brne	.+16     	; 0x9e4 <__stack+0xe5>
     9d4:	f1 01       	movw	r30, r2
     9d6:	93 fd       	sbrc	r25, 3
     9d8:	85 91       	lpm	r24, Z+
     9da:	93 ff       	sbrs	r25, 3
     9dc:	81 91       	ld	r24, Z+
     9de:	1f 01       	movw	r2, r30
     9e0:	81 11       	cpse	r24, r1
     9e2:	b3 cf       	rjmp	.-154    	; 0x94a <__stack+0x4b>
     9e4:	9b eb       	ldi	r25, 0xBB	; 187
     9e6:	98 0f       	add	r25, r24
     9e8:	93 30       	cpi	r25, 0x03	; 3
     9ea:	20 f4       	brcc	.+8      	; 0x9f4 <__stack+0xf5>
     9ec:	99 2d       	mov	r25, r9
     9ee:	90 61       	ori	r25, 0x10	; 16
     9f0:	80 5e       	subi	r24, 0xE0	; 224
     9f2:	07 c0       	rjmp	.+14     	; 0xa02 <__stack+0x103>
     9f4:	9b e9       	ldi	r25, 0x9B	; 155
     9f6:	98 0f       	add	r25, r24
     9f8:	93 30       	cpi	r25, 0x03	; 3
     9fa:	08 f0       	brcs	.+2      	; 0x9fe <__stack+0xff>
     9fc:	66 c1       	rjmp	.+716    	; 0xcca <__stack+0x3cb>
     9fe:	99 2d       	mov	r25, r9
     a00:	9f 7e       	andi	r25, 0xEF	; 239
     a02:	96 ff       	sbrs	r25, 6
     a04:	16 e0       	ldi	r17, 0x06	; 6
     a06:	9f 73       	andi	r25, 0x3F	; 63
     a08:	99 2e       	mov	r9, r25
     a0a:	85 36       	cpi	r24, 0x65	; 101
     a0c:	19 f4       	brne	.+6      	; 0xa14 <__stack+0x115>
     a0e:	90 64       	ori	r25, 0x40	; 64
     a10:	99 2e       	mov	r9, r25
     a12:	08 c0       	rjmp	.+16     	; 0xa24 <__stack+0x125>
     a14:	86 36       	cpi	r24, 0x66	; 102
     a16:	21 f4       	brne	.+8      	; 0xa20 <__stack+0x121>
     a18:	39 2f       	mov	r19, r25
     a1a:	30 68       	ori	r19, 0x80	; 128
     a1c:	93 2e       	mov	r9, r19
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <__stack+0x125>
     a20:	11 11       	cpse	r17, r1
     a22:	11 50       	subi	r17, 0x01	; 1
     a24:	97 fe       	sbrs	r9, 7
     a26:	07 c0       	rjmp	.+14     	; 0xa36 <__stack+0x137>
     a28:	1c 33       	cpi	r17, 0x3C	; 60
     a2a:	50 f4       	brcc	.+20     	; 0xa40 <__stack+0x141>
     a2c:	44 24       	eor	r4, r4
     a2e:	43 94       	inc	r4
     a30:	41 0e       	add	r4, r17
     a32:	27 e0       	ldi	r18, 0x07	; 7
     a34:	0b c0       	rjmp	.+22     	; 0xa4c <__stack+0x14d>
     a36:	18 30       	cpi	r17, 0x08	; 8
     a38:	38 f0       	brcs	.+14     	; 0xa48 <__stack+0x149>
     a3a:	27 e0       	ldi	r18, 0x07	; 7
     a3c:	17 e0       	ldi	r17, 0x07	; 7
     a3e:	05 c0       	rjmp	.+10     	; 0xa4a <__stack+0x14b>
     a40:	27 e0       	ldi	r18, 0x07	; 7
     a42:	9c e3       	ldi	r25, 0x3C	; 60
     a44:	49 2e       	mov	r4, r25
     a46:	02 c0       	rjmp	.+4      	; 0xa4c <__stack+0x14d>
     a48:	21 2f       	mov	r18, r17
     a4a:	41 2c       	mov	r4, r1
     a4c:	56 01       	movw	r10, r12
     a4e:	84 e0       	ldi	r24, 0x04	; 4
     a50:	a8 0e       	add	r10, r24
     a52:	b1 1c       	adc	r11, r1
     a54:	f6 01       	movw	r30, r12
     a56:	60 81       	ld	r22, Z
     a58:	71 81       	ldd	r23, Z+1	; 0x01
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	93 81       	ldd	r25, Z+3	; 0x03
     a5e:	04 2d       	mov	r16, r4
     a60:	a3 01       	movw	r20, r6
     a62:	0e 94 75 08 	call	0x10ea	; 0x10ea <__ftoa_engine>
     a66:	6c 01       	movw	r12, r24
     a68:	f9 81       	ldd	r31, Y+1	; 0x01
     a6a:	fc 87       	std	Y+12, r31	; 0x0c
     a6c:	f0 ff       	sbrs	r31, 0
     a6e:	02 c0       	rjmp	.+4      	; 0xa74 <__stack+0x175>
     a70:	f3 ff       	sbrs	r31, 3
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <__stack+0x181>
     a74:	91 fc       	sbrc	r9, 1
     a76:	06 c0       	rjmp	.+12     	; 0xa84 <__stack+0x185>
     a78:	92 fe       	sbrs	r9, 2
     a7a:	06 c0       	rjmp	.+12     	; 0xa88 <__stack+0x189>
     a7c:	00 e2       	ldi	r16, 0x20	; 32
     a7e:	05 c0       	rjmp	.+10     	; 0xa8a <__stack+0x18b>
     a80:	0d e2       	ldi	r16, 0x2D	; 45
     a82:	03 c0       	rjmp	.+6      	; 0xa8a <__stack+0x18b>
     a84:	0b e2       	ldi	r16, 0x2B	; 43
     a86:	01 c0       	rjmp	.+2      	; 0xa8a <__stack+0x18b>
     a88:	00 e0       	ldi	r16, 0x00	; 0
     a8a:	8c 85       	ldd	r24, Y+12	; 0x0c
     a8c:	8c 70       	andi	r24, 0x0C	; 12
     a8e:	19 f0       	breq	.+6      	; 0xa96 <__stack+0x197>
     a90:	01 11       	cpse	r16, r1
     a92:	5a c2       	rjmp	.+1204   	; 0xf48 <__stack+0x649>
     a94:	9b c2       	rjmp	.+1334   	; 0xfcc <__stack+0x6cd>
     a96:	97 fe       	sbrs	r9, 7
     a98:	10 c0       	rjmp	.+32     	; 0xaba <__stack+0x1bb>
     a9a:	4c 0c       	add	r4, r12
     a9c:	fc 85       	ldd	r31, Y+12	; 0x0c
     a9e:	f4 ff       	sbrs	r31, 4
     aa0:	04 c0       	rjmp	.+8      	; 0xaaa <__stack+0x1ab>
     aa2:	8a 81       	ldd	r24, Y+2	; 0x02
     aa4:	81 33       	cpi	r24, 0x31	; 49
     aa6:	09 f4       	brne	.+2      	; 0xaaa <__stack+0x1ab>
     aa8:	4a 94       	dec	r4
     aaa:	14 14       	cp	r1, r4
     aac:	74 f5       	brge	.+92     	; 0xb0a <__stack+0x20b>
     aae:	28 e0       	ldi	r18, 0x08	; 8
     ab0:	24 15       	cp	r18, r4
     ab2:	78 f5       	brcc	.+94     	; 0xb12 <__stack+0x213>
     ab4:	88 e0       	ldi	r24, 0x08	; 8
     ab6:	48 2e       	mov	r4, r24
     ab8:	2c c0       	rjmp	.+88     	; 0xb12 <__stack+0x213>
     aba:	96 fc       	sbrc	r9, 6
     abc:	2a c0       	rjmp	.+84     	; 0xb12 <__stack+0x213>
     abe:	81 2f       	mov	r24, r17
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	8c 15       	cp	r24, r12
     ac4:	9d 05       	cpc	r25, r13
     ac6:	9c f0       	brlt	.+38     	; 0xaee <__stack+0x1ef>
     ac8:	3c ef       	ldi	r19, 0xFC	; 252
     aca:	c3 16       	cp	r12, r19
     acc:	3f ef       	ldi	r19, 0xFF	; 255
     ace:	d3 06       	cpc	r13, r19
     ad0:	74 f0       	brlt	.+28     	; 0xaee <__stack+0x1ef>
     ad2:	89 2d       	mov	r24, r9
     ad4:	80 68       	ori	r24, 0x80	; 128
     ad6:	98 2e       	mov	r9, r24
     ad8:	0a c0       	rjmp	.+20     	; 0xaee <__stack+0x1ef>
     ada:	e2 e0       	ldi	r30, 0x02	; 2
     adc:	f0 e0       	ldi	r31, 0x00	; 0
     ade:	ec 0f       	add	r30, r28
     ae0:	fd 1f       	adc	r31, r29
     ae2:	e1 0f       	add	r30, r17
     ae4:	f1 1d       	adc	r31, r1
     ae6:	80 81       	ld	r24, Z
     ae8:	80 33       	cpi	r24, 0x30	; 48
     aea:	19 f4       	brne	.+6      	; 0xaf2 <__stack+0x1f3>
     aec:	11 50       	subi	r17, 0x01	; 1
     aee:	11 11       	cpse	r17, r1
     af0:	f4 cf       	rjmp	.-24     	; 0xada <__stack+0x1db>
     af2:	97 fe       	sbrs	r9, 7
     af4:	0e c0       	rjmp	.+28     	; 0xb12 <__stack+0x213>
     af6:	44 24       	eor	r4, r4
     af8:	43 94       	inc	r4
     afa:	41 0e       	add	r4, r17
     afc:	81 2f       	mov	r24, r17
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	c8 16       	cp	r12, r24
     b02:	d9 06       	cpc	r13, r25
     b04:	2c f4       	brge	.+10     	; 0xb10 <__stack+0x211>
     b06:	1c 19       	sub	r17, r12
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <__stack+0x213>
     b0a:	44 24       	eor	r4, r4
     b0c:	43 94       	inc	r4
     b0e:	01 c0       	rjmp	.+2      	; 0xb12 <__stack+0x213>
     b10:	10 e0       	ldi	r17, 0x00	; 0
     b12:	97 fe       	sbrs	r9, 7
     b14:	06 c0       	rjmp	.+12     	; 0xb22 <__stack+0x223>
     b16:	1c 14       	cp	r1, r12
     b18:	1d 04       	cpc	r1, r13
     b1a:	34 f4       	brge	.+12     	; 0xb28 <__stack+0x229>
     b1c:	c6 01       	movw	r24, r12
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__stack+0x22d>
     b22:	85 e0       	ldi	r24, 0x05	; 5
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <__stack+0x22d>
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	01 11       	cpse	r16, r1
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	11 23       	and	r17, r17
     b32:	31 f0       	breq	.+12     	; 0xb40 <__stack+0x241>
     b34:	21 2f       	mov	r18, r17
     b36:	30 e0       	ldi	r19, 0x00	; 0
     b38:	2f 5f       	subi	r18, 0xFF	; 255
     b3a:	3f 4f       	sbci	r19, 0xFF	; 255
     b3c:	82 0f       	add	r24, r18
     b3e:	93 1f       	adc	r25, r19
     b40:	25 2d       	mov	r18, r5
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	82 17       	cp	r24, r18
     b46:	93 07       	cpc	r25, r19
     b48:	14 f4       	brge	.+4      	; 0xb4e <__stack+0x24f>
     b4a:	58 1a       	sub	r5, r24
     b4c:	01 c0       	rjmp	.+2      	; 0xb50 <__stack+0x251>
     b4e:	51 2c       	mov	r5, r1
     b50:	89 2d       	mov	r24, r9
     b52:	89 70       	andi	r24, 0x09	; 9
     b54:	49 f4       	brne	.+18     	; 0xb68 <__stack+0x269>
     b56:	55 20       	and	r5, r5
     b58:	39 f0       	breq	.+14     	; 0xb68 <__stack+0x269>
     b5a:	b7 01       	movw	r22, r14
     b5c:	80 e2       	ldi	r24, 0x20	; 32
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     b64:	5a 94       	dec	r5
     b66:	f7 cf       	rjmp	.-18     	; 0xb56 <__stack+0x257>
     b68:	00 23       	and	r16, r16
     b6a:	29 f0       	breq	.+10     	; 0xb76 <__stack+0x277>
     b6c:	b7 01       	movw	r22, r14
     b6e:	80 2f       	mov	r24, r16
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     b76:	93 fc       	sbrc	r9, 3
     b78:	09 c0       	rjmp	.+18     	; 0xb8c <__stack+0x28d>
     b7a:	55 20       	and	r5, r5
     b7c:	39 f0       	breq	.+14     	; 0xb8c <__stack+0x28d>
     b7e:	b7 01       	movw	r22, r14
     b80:	80 e3       	ldi	r24, 0x30	; 48
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     b88:	5a 94       	dec	r5
     b8a:	f7 cf       	rjmp	.-18     	; 0xb7a <__stack+0x27b>
     b8c:	97 fe       	sbrs	r9, 7
     b8e:	4c c0       	rjmp	.+152    	; 0xc28 <__stack+0x329>
     b90:	46 01       	movw	r8, r12
     b92:	d7 fe       	sbrs	r13, 7
     b94:	02 c0       	rjmp	.+4      	; 0xb9a <__stack+0x29b>
     b96:	81 2c       	mov	r8, r1
     b98:	91 2c       	mov	r9, r1
     b9a:	c6 01       	movw	r24, r12
     b9c:	88 19       	sub	r24, r8
     b9e:	99 09       	sbc	r25, r9
     ba0:	f3 01       	movw	r30, r6
     ba2:	e8 0f       	add	r30, r24
     ba4:	f9 1f       	adc	r31, r25
     ba6:	fe 87       	std	Y+14, r31	; 0x0e
     ba8:	ed 87       	std	Y+13, r30	; 0x0d
     baa:	96 01       	movw	r18, r12
     bac:	24 19       	sub	r18, r4
     bae:	31 09       	sbc	r19, r1
     bb0:	38 8b       	std	Y+16, r19	; 0x10
     bb2:	2f 87       	std	Y+15, r18	; 0x0f
     bb4:	01 2f       	mov	r16, r17
     bb6:	10 e0       	ldi	r17, 0x00	; 0
     bb8:	11 95       	neg	r17
     bba:	01 95       	neg	r16
     bbc:	11 09       	sbc	r17, r1
     bbe:	3f ef       	ldi	r19, 0xFF	; 255
     bc0:	83 16       	cp	r8, r19
     bc2:	93 06       	cpc	r9, r19
     bc4:	29 f4       	brne	.+10     	; 0xbd0 <__stack+0x2d1>
     bc6:	b7 01       	movw	r22, r14
     bc8:	8e e2       	ldi	r24, 0x2E	; 46
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     bd0:	c8 14       	cp	r12, r8
     bd2:	d9 04       	cpc	r13, r9
     bd4:	4c f0       	brlt	.+18     	; 0xbe8 <__stack+0x2e9>
     bd6:	8f 85       	ldd	r24, Y+15	; 0x0f
     bd8:	98 89       	ldd	r25, Y+16	; 0x10
     bda:	88 15       	cp	r24, r8
     bdc:	99 05       	cpc	r25, r9
     bde:	24 f4       	brge	.+8      	; 0xbe8 <__stack+0x2e9>
     be0:	ed 85       	ldd	r30, Y+13	; 0x0d
     be2:	fe 85       	ldd	r31, Y+14	; 0x0e
     be4:	81 81       	ldd	r24, Z+1	; 0x01
     be6:	01 c0       	rjmp	.+2      	; 0xbea <__stack+0x2eb>
     be8:	80 e3       	ldi	r24, 0x30	; 48
     bea:	f1 e0       	ldi	r31, 0x01	; 1
     bec:	8f 1a       	sub	r8, r31
     bee:	91 08       	sbc	r9, r1
     bf0:	2d 85       	ldd	r18, Y+13	; 0x0d
     bf2:	3e 85       	ldd	r19, Y+14	; 0x0e
     bf4:	2f 5f       	subi	r18, 0xFF	; 255
     bf6:	3f 4f       	sbci	r19, 0xFF	; 255
     bf8:	3e 87       	std	Y+14, r19	; 0x0e
     bfa:	2d 87       	std	Y+13, r18	; 0x0d
     bfc:	80 16       	cp	r8, r16
     bfe:	91 06       	cpc	r9, r17
     c00:	2c f0       	brlt	.+10     	; 0xc0c <__stack+0x30d>
     c02:	b7 01       	movw	r22, r14
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     c0a:	d9 cf       	rjmp	.-78     	; 0xbbe <__stack+0x2bf>
     c0c:	c8 14       	cp	r12, r8
     c0e:	d9 04       	cpc	r13, r9
     c10:	41 f4       	brne	.+16     	; 0xc22 <__stack+0x323>
     c12:	9a 81       	ldd	r25, Y+2	; 0x02
     c14:	96 33       	cpi	r25, 0x36	; 54
     c16:	20 f4       	brcc	.+8      	; 0xc20 <__stack+0x321>
     c18:	95 33       	cpi	r25, 0x35	; 53
     c1a:	19 f4       	brne	.+6      	; 0xc22 <__stack+0x323>
     c1c:	3c 85       	ldd	r19, Y+12	; 0x0c
     c1e:	34 ff       	sbrs	r19, 4
     c20:	81 e3       	ldi	r24, 0x31	; 49
     c22:	b7 01       	movw	r22, r14
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	4e c0       	rjmp	.+156    	; 0xcc4 <__stack+0x3c5>
     c28:	8a 81       	ldd	r24, Y+2	; 0x02
     c2a:	81 33       	cpi	r24, 0x31	; 49
     c2c:	19 f0       	breq	.+6      	; 0xc34 <__stack+0x335>
     c2e:	9c 85       	ldd	r25, Y+12	; 0x0c
     c30:	9f 7e       	andi	r25, 0xEF	; 239
     c32:	9c 87       	std	Y+12, r25	; 0x0c
     c34:	b7 01       	movw	r22, r14
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     c3c:	11 11       	cpse	r17, r1
     c3e:	05 c0       	rjmp	.+10     	; 0xc4a <__stack+0x34b>
     c40:	94 fc       	sbrc	r9, 4
     c42:	18 c0       	rjmp	.+48     	; 0xc74 <__stack+0x375>
     c44:	85 e6       	ldi	r24, 0x65	; 101
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	17 c0       	rjmp	.+46     	; 0xc78 <__stack+0x379>
     c4a:	b7 01       	movw	r22, r14
     c4c:	8e e2       	ldi	r24, 0x2E	; 46
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     c54:	1e 5f       	subi	r17, 0xFE	; 254
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	01 e0       	ldi	r16, 0x01	; 1
     c5a:	08 0f       	add	r16, r24
     c5c:	f3 01       	movw	r30, r6
     c5e:	e8 0f       	add	r30, r24
     c60:	f1 1d       	adc	r31, r1
     c62:	80 81       	ld	r24, Z
     c64:	b7 01       	movw	r22, r14
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     c6c:	80 2f       	mov	r24, r16
     c6e:	01 13       	cpse	r16, r17
     c70:	f3 cf       	rjmp	.-26     	; 0xc58 <__stack+0x359>
     c72:	e6 cf       	rjmp	.-52     	; 0xc40 <__stack+0x341>
     c74:	85 e4       	ldi	r24, 0x45	; 69
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	b7 01       	movw	r22, r14
     c7a:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     c7e:	d7 fc       	sbrc	r13, 7
     c80:	06 c0       	rjmp	.+12     	; 0xc8e <__stack+0x38f>
     c82:	c1 14       	cp	r12, r1
     c84:	d1 04       	cpc	r13, r1
     c86:	41 f4       	brne	.+16     	; 0xc98 <__stack+0x399>
     c88:	ec 85       	ldd	r30, Y+12	; 0x0c
     c8a:	e4 ff       	sbrs	r30, 4
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__stack+0x399>
     c8e:	d1 94       	neg	r13
     c90:	c1 94       	neg	r12
     c92:	d1 08       	sbc	r13, r1
     c94:	8d e2       	ldi	r24, 0x2D	; 45
     c96:	01 c0       	rjmp	.+2      	; 0xc9a <__stack+0x39b>
     c98:	8b e2       	ldi	r24, 0x2B	; 43
     c9a:	b7 01       	movw	r22, r14
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     ca2:	80 e3       	ldi	r24, 0x30	; 48
     ca4:	2a e0       	ldi	r18, 0x0A	; 10
     ca6:	c2 16       	cp	r12, r18
     ca8:	d1 04       	cpc	r13, r1
     caa:	2c f0       	brlt	.+10     	; 0xcb6 <__stack+0x3b7>
     cac:	8f 5f       	subi	r24, 0xFF	; 255
     cae:	fa e0       	ldi	r31, 0x0A	; 10
     cb0:	cf 1a       	sub	r12, r31
     cb2:	d1 08       	sbc	r13, r1
     cb4:	f7 cf       	rjmp	.-18     	; 0xca4 <__stack+0x3a5>
     cb6:	b7 01       	movw	r22, r14
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     cbe:	b7 01       	movw	r22, r14
     cc0:	c6 01       	movw	r24, r12
     cc2:	c0 96       	adiw	r24, 0x30	; 48
     cc4:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     cc8:	54 c1       	rjmp	.+680    	; 0xf72 <__stack+0x673>
     cca:	83 36       	cpi	r24, 0x63	; 99
     ccc:	31 f0       	breq	.+12     	; 0xcda <__stack+0x3db>
     cce:	83 37       	cpi	r24, 0x73	; 115
     cd0:	79 f0       	breq	.+30     	; 0xcf0 <__stack+0x3f1>
     cd2:	83 35       	cpi	r24, 0x53	; 83
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <__stack+0x3d9>
     cd6:	56 c0       	rjmp	.+172    	; 0xd84 <__stack+0x485>
     cd8:	20 c0       	rjmp	.+64     	; 0xd1a <__stack+0x41b>
     cda:	56 01       	movw	r10, r12
     cdc:	32 e0       	ldi	r19, 0x02	; 2
     cde:	a3 0e       	add	r10, r19
     ce0:	b1 1c       	adc	r11, r1
     ce2:	f6 01       	movw	r30, r12
     ce4:	80 81       	ld	r24, Z
     ce6:	89 83       	std	Y+1, r24	; 0x01
     ce8:	01 e0       	ldi	r16, 0x01	; 1
     cea:	10 e0       	ldi	r17, 0x00	; 0
     cec:	63 01       	movw	r12, r6
     cee:	12 c0       	rjmp	.+36     	; 0xd14 <__stack+0x415>
     cf0:	56 01       	movw	r10, r12
     cf2:	f2 e0       	ldi	r31, 0x02	; 2
     cf4:	af 0e       	add	r10, r31
     cf6:	b1 1c       	adc	r11, r1
     cf8:	f6 01       	movw	r30, r12
     cfa:	c0 80       	ld	r12, Z
     cfc:	d1 80       	ldd	r13, Z+1	; 0x01
     cfe:	96 fe       	sbrs	r9, 6
     d00:	03 c0       	rjmp	.+6      	; 0xd08 <__stack+0x409>
     d02:	61 2f       	mov	r22, r17
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <__stack+0x40d>
     d08:	6f ef       	ldi	r22, 0xFF	; 255
     d0a:	7f ef       	ldi	r23, 0xFF	; 255
     d0c:	c6 01       	movw	r24, r12
     d0e:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <strnlen>
     d12:	8c 01       	movw	r16, r24
     d14:	f9 2d       	mov	r31, r9
     d16:	ff 77       	andi	r31, 0x7F	; 127
     d18:	14 c0       	rjmp	.+40     	; 0xd42 <__stack+0x443>
     d1a:	56 01       	movw	r10, r12
     d1c:	22 e0       	ldi	r18, 0x02	; 2
     d1e:	a2 0e       	add	r10, r18
     d20:	b1 1c       	adc	r11, r1
     d22:	f6 01       	movw	r30, r12
     d24:	c0 80       	ld	r12, Z
     d26:	d1 80       	ldd	r13, Z+1	; 0x01
     d28:	96 fe       	sbrs	r9, 6
     d2a:	03 c0       	rjmp	.+6      	; 0xd32 <__stack+0x433>
     d2c:	61 2f       	mov	r22, r17
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <__stack+0x437>
     d32:	6f ef       	ldi	r22, 0xFF	; 255
     d34:	7f ef       	ldi	r23, 0xFF	; 255
     d36:	c6 01       	movw	r24, r12
     d38:	0e 94 4d 09 	call	0x129a	; 0x129a <strnlen_P>
     d3c:	8c 01       	movw	r16, r24
     d3e:	f9 2d       	mov	r31, r9
     d40:	f0 68       	ori	r31, 0x80	; 128
     d42:	9f 2e       	mov	r9, r31
     d44:	f3 fd       	sbrc	r31, 3
     d46:	1a c0       	rjmp	.+52     	; 0xd7c <__stack+0x47d>
     d48:	85 2d       	mov	r24, r5
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	08 17       	cp	r16, r24
     d4e:	19 07       	cpc	r17, r25
     d50:	a8 f4       	brcc	.+42     	; 0xd7c <__stack+0x47d>
     d52:	b7 01       	movw	r22, r14
     d54:	80 e2       	ldi	r24, 0x20	; 32
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     d5c:	5a 94       	dec	r5
     d5e:	f4 cf       	rjmp	.-24     	; 0xd48 <__stack+0x449>
     d60:	f6 01       	movw	r30, r12
     d62:	97 fc       	sbrc	r9, 7
     d64:	85 91       	lpm	r24, Z+
     d66:	97 fe       	sbrs	r9, 7
     d68:	81 91       	ld	r24, Z+
     d6a:	6f 01       	movw	r12, r30
     d6c:	b7 01       	movw	r22, r14
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     d74:	51 10       	cpse	r5, r1
     d76:	5a 94       	dec	r5
     d78:	01 50       	subi	r16, 0x01	; 1
     d7a:	11 09       	sbc	r17, r1
     d7c:	01 15       	cp	r16, r1
     d7e:	11 05       	cpc	r17, r1
     d80:	79 f7       	brne	.-34     	; 0xd60 <__stack+0x461>
     d82:	f7 c0       	rjmp	.+494    	; 0xf72 <__stack+0x673>
     d84:	84 36       	cpi	r24, 0x64	; 100
     d86:	11 f0       	breq	.+4      	; 0xd8c <__stack+0x48d>
     d88:	89 36       	cpi	r24, 0x69	; 105
     d8a:	61 f5       	brne	.+88     	; 0xde4 <__stack+0x4e5>
     d8c:	56 01       	movw	r10, r12
     d8e:	97 fe       	sbrs	r9, 7
     d90:	09 c0       	rjmp	.+18     	; 0xda4 <__stack+0x4a5>
     d92:	24 e0       	ldi	r18, 0x04	; 4
     d94:	a2 0e       	add	r10, r18
     d96:	b1 1c       	adc	r11, r1
     d98:	f6 01       	movw	r30, r12
     d9a:	60 81       	ld	r22, Z
     d9c:	71 81       	ldd	r23, Z+1	; 0x01
     d9e:	82 81       	ldd	r24, Z+2	; 0x02
     da0:	93 81       	ldd	r25, Z+3	; 0x03
     da2:	0a c0       	rjmp	.+20     	; 0xdb8 <__stack+0x4b9>
     da4:	f2 e0       	ldi	r31, 0x02	; 2
     da6:	af 0e       	add	r10, r31
     da8:	b1 1c       	adc	r11, r1
     daa:	f6 01       	movw	r30, r12
     dac:	60 81       	ld	r22, Z
     dae:	71 81       	ldd	r23, Z+1	; 0x01
     db0:	07 2e       	mov	r0, r23
     db2:	00 0c       	add	r0, r0
     db4:	88 0b       	sbc	r24, r24
     db6:	99 0b       	sbc	r25, r25
     db8:	f9 2d       	mov	r31, r9
     dba:	ff 76       	andi	r31, 0x6F	; 111
     dbc:	9f 2e       	mov	r9, r31
     dbe:	97 ff       	sbrs	r25, 7
     dc0:	09 c0       	rjmp	.+18     	; 0xdd4 <__stack+0x4d5>
     dc2:	90 95       	com	r25
     dc4:	80 95       	com	r24
     dc6:	70 95       	com	r23
     dc8:	61 95       	neg	r22
     dca:	7f 4f       	sbci	r23, 0xFF	; 255
     dcc:	8f 4f       	sbci	r24, 0xFF	; 255
     dce:	9f 4f       	sbci	r25, 0xFF	; 255
     dd0:	f0 68       	ori	r31, 0x80	; 128
     dd2:	9f 2e       	mov	r9, r31
     dd4:	2a e0       	ldi	r18, 0x0A	; 10
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	a3 01       	movw	r20, r6
     dda:	0e 94 de 09 	call	0x13bc	; 0x13bc <__ultoa_invert>
     dde:	c8 2e       	mov	r12, r24
     de0:	c6 18       	sub	r12, r6
     de2:	3f c0       	rjmp	.+126    	; 0xe62 <__stack+0x563>
     de4:	09 2d       	mov	r16, r9
     de6:	85 37       	cpi	r24, 0x75	; 117
     de8:	21 f4       	brne	.+8      	; 0xdf2 <__stack+0x4f3>
     dea:	0f 7e       	andi	r16, 0xEF	; 239
     dec:	2a e0       	ldi	r18, 0x0A	; 10
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	1d c0       	rjmp	.+58     	; 0xe2c <__stack+0x52d>
     df2:	09 7f       	andi	r16, 0xF9	; 249
     df4:	8f 36       	cpi	r24, 0x6F	; 111
     df6:	91 f0       	breq	.+36     	; 0xe1c <__stack+0x51d>
     df8:	18 f4       	brcc	.+6      	; 0xe00 <__stack+0x501>
     dfa:	88 35       	cpi	r24, 0x58	; 88
     dfc:	59 f0       	breq	.+22     	; 0xe14 <__stack+0x515>
     dfe:	c3 c0       	rjmp	.+390    	; 0xf86 <__stack+0x687>
     e00:	80 37       	cpi	r24, 0x70	; 112
     e02:	19 f0       	breq	.+6      	; 0xe0a <__stack+0x50b>
     e04:	88 37       	cpi	r24, 0x78	; 120
     e06:	11 f0       	breq	.+4      	; 0xe0c <__stack+0x50d>
     e08:	be c0       	rjmp	.+380    	; 0xf86 <__stack+0x687>
     e0a:	00 61       	ori	r16, 0x10	; 16
     e0c:	04 ff       	sbrs	r16, 4
     e0e:	09 c0       	rjmp	.+18     	; 0xe22 <__stack+0x523>
     e10:	04 60       	ori	r16, 0x04	; 4
     e12:	07 c0       	rjmp	.+14     	; 0xe22 <__stack+0x523>
     e14:	94 fe       	sbrs	r9, 4
     e16:	08 c0       	rjmp	.+16     	; 0xe28 <__stack+0x529>
     e18:	06 60       	ori	r16, 0x06	; 6
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <__stack+0x529>
     e1c:	28 e0       	ldi	r18, 0x08	; 8
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	05 c0       	rjmp	.+10     	; 0xe2c <__stack+0x52d>
     e22:	20 e1       	ldi	r18, 0x10	; 16
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <__stack+0x52d>
     e28:	20 e1       	ldi	r18, 0x10	; 16
     e2a:	32 e0       	ldi	r19, 0x02	; 2
     e2c:	56 01       	movw	r10, r12
     e2e:	07 ff       	sbrs	r16, 7
     e30:	09 c0       	rjmp	.+18     	; 0xe44 <__stack+0x545>
     e32:	84 e0       	ldi	r24, 0x04	; 4
     e34:	a8 0e       	add	r10, r24
     e36:	b1 1c       	adc	r11, r1
     e38:	f6 01       	movw	r30, r12
     e3a:	60 81       	ld	r22, Z
     e3c:	71 81       	ldd	r23, Z+1	; 0x01
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	08 c0       	rjmp	.+16     	; 0xe54 <__stack+0x555>
     e44:	f2 e0       	ldi	r31, 0x02	; 2
     e46:	af 0e       	add	r10, r31
     e48:	b1 1c       	adc	r11, r1
     e4a:	f6 01       	movw	r30, r12
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	80 e0       	ldi	r24, 0x00	; 0
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	a3 01       	movw	r20, r6
     e56:	0e 94 de 09 	call	0x13bc	; 0x13bc <__ultoa_invert>
     e5a:	c8 2e       	mov	r12, r24
     e5c:	c6 18       	sub	r12, r6
     e5e:	0f 77       	andi	r16, 0x7F	; 127
     e60:	90 2e       	mov	r9, r16
     e62:	96 fe       	sbrs	r9, 6
     e64:	0b c0       	rjmp	.+22     	; 0xe7c <__stack+0x57d>
     e66:	09 2d       	mov	r16, r9
     e68:	0e 7f       	andi	r16, 0xFE	; 254
     e6a:	c1 16       	cp	r12, r17
     e6c:	50 f4       	brcc	.+20     	; 0xe82 <__stack+0x583>
     e6e:	94 fe       	sbrs	r9, 4
     e70:	0a c0       	rjmp	.+20     	; 0xe86 <__stack+0x587>
     e72:	92 fc       	sbrc	r9, 2
     e74:	08 c0       	rjmp	.+16     	; 0xe86 <__stack+0x587>
     e76:	09 2d       	mov	r16, r9
     e78:	0e 7e       	andi	r16, 0xEE	; 238
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <__stack+0x587>
     e7c:	dc 2c       	mov	r13, r12
     e7e:	09 2d       	mov	r16, r9
     e80:	03 c0       	rjmp	.+6      	; 0xe88 <__stack+0x589>
     e82:	dc 2c       	mov	r13, r12
     e84:	01 c0       	rjmp	.+2      	; 0xe88 <__stack+0x589>
     e86:	d1 2e       	mov	r13, r17
     e88:	04 ff       	sbrs	r16, 4
     e8a:	0d c0       	rjmp	.+26     	; 0xea6 <__stack+0x5a7>
     e8c:	fe 01       	movw	r30, r28
     e8e:	ec 0d       	add	r30, r12
     e90:	f1 1d       	adc	r31, r1
     e92:	80 81       	ld	r24, Z
     e94:	80 33       	cpi	r24, 0x30	; 48
     e96:	11 f4       	brne	.+4      	; 0xe9c <__stack+0x59d>
     e98:	09 7e       	andi	r16, 0xE9	; 233
     e9a:	09 c0       	rjmp	.+18     	; 0xeae <__stack+0x5af>
     e9c:	02 ff       	sbrs	r16, 2
     e9e:	06 c0       	rjmp	.+12     	; 0xeac <__stack+0x5ad>
     ea0:	d3 94       	inc	r13
     ea2:	d3 94       	inc	r13
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <__stack+0x5af>
     ea6:	80 2f       	mov	r24, r16
     ea8:	86 78       	andi	r24, 0x86	; 134
     eaa:	09 f0       	breq	.+2      	; 0xeae <__stack+0x5af>
     eac:	d3 94       	inc	r13
     eae:	03 fd       	sbrc	r16, 3
     eb0:	11 c0       	rjmp	.+34     	; 0xed4 <__stack+0x5d5>
     eb2:	00 ff       	sbrs	r16, 0
     eb4:	06 c0       	rjmp	.+12     	; 0xec2 <__stack+0x5c3>
     eb6:	1c 2d       	mov	r17, r12
     eb8:	d5 14       	cp	r13, r5
     eba:	80 f4       	brcc	.+32     	; 0xedc <__stack+0x5dd>
     ebc:	15 0d       	add	r17, r5
     ebe:	1d 19       	sub	r17, r13
     ec0:	0d c0       	rjmp	.+26     	; 0xedc <__stack+0x5dd>
     ec2:	d5 14       	cp	r13, r5
     ec4:	58 f4       	brcc	.+22     	; 0xedc <__stack+0x5dd>
     ec6:	b7 01       	movw	r22, r14
     ec8:	80 e2       	ldi	r24, 0x20	; 32
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     ed0:	d3 94       	inc	r13
     ed2:	f7 cf       	rjmp	.-18     	; 0xec2 <__stack+0x5c3>
     ed4:	d5 14       	cp	r13, r5
     ed6:	10 f4       	brcc	.+4      	; 0xedc <__stack+0x5dd>
     ed8:	5d 18       	sub	r5, r13
     eda:	01 c0       	rjmp	.+2      	; 0xede <__stack+0x5df>
     edc:	51 2c       	mov	r5, r1
     ede:	04 ff       	sbrs	r16, 4
     ee0:	10 c0       	rjmp	.+32     	; 0xf02 <__stack+0x603>
     ee2:	b7 01       	movw	r22, r14
     ee4:	80 e3       	ldi	r24, 0x30	; 48
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     eec:	02 ff       	sbrs	r16, 2
     eee:	17 c0       	rjmp	.+46     	; 0xf1e <__stack+0x61f>
     ef0:	01 fd       	sbrc	r16, 1
     ef2:	03 c0       	rjmp	.+6      	; 0xefa <__stack+0x5fb>
     ef4:	88 e7       	ldi	r24, 0x78	; 120
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <__stack+0x5ff>
     efa:	88 e5       	ldi	r24, 0x58	; 88
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	b7 01       	movw	r22, r14
     f00:	0c c0       	rjmp	.+24     	; 0xf1a <__stack+0x61b>
     f02:	80 2f       	mov	r24, r16
     f04:	86 78       	andi	r24, 0x86	; 134
     f06:	59 f0       	breq	.+22     	; 0xf1e <__stack+0x61f>
     f08:	01 ff       	sbrs	r16, 1
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <__stack+0x611>
     f0c:	8b e2       	ldi	r24, 0x2B	; 43
     f0e:	01 c0       	rjmp	.+2      	; 0xf12 <__stack+0x613>
     f10:	80 e2       	ldi	r24, 0x20	; 32
     f12:	07 fd       	sbrc	r16, 7
     f14:	8d e2       	ldi	r24, 0x2D	; 45
     f16:	b7 01       	movw	r22, r14
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     f1e:	c1 16       	cp	r12, r17
     f20:	38 f4       	brcc	.+14     	; 0xf30 <__stack+0x631>
     f22:	b7 01       	movw	r22, r14
     f24:	80 e3       	ldi	r24, 0x30	; 48
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     f2c:	11 50       	subi	r17, 0x01	; 1
     f2e:	f7 cf       	rjmp	.-18     	; 0xf1e <__stack+0x61f>
     f30:	ca 94       	dec	r12
     f32:	f3 01       	movw	r30, r6
     f34:	ec 0d       	add	r30, r12
     f36:	f1 1d       	adc	r31, r1
     f38:	80 81       	ld	r24, Z
     f3a:	b7 01       	movw	r22, r14
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     f42:	c1 10       	cpse	r12, r1
     f44:	f5 cf       	rjmp	.-22     	; 0xf30 <__stack+0x631>
     f46:	15 c0       	rjmp	.+42     	; 0xf72 <__stack+0x673>
     f48:	f4 e0       	ldi	r31, 0x04	; 4
     f4a:	f5 15       	cp	r31, r5
     f4c:	60 f5       	brcc	.+88     	; 0xfa6 <__stack+0x6a7>
     f4e:	84 e0       	ldi	r24, 0x04	; 4
     f50:	58 1a       	sub	r5, r24
     f52:	93 fe       	sbrs	r9, 3
     f54:	1f c0       	rjmp	.+62     	; 0xf94 <__stack+0x695>
     f56:	01 11       	cpse	r16, r1
     f58:	27 c0       	rjmp	.+78     	; 0xfa8 <__stack+0x6a9>
     f5a:	2c 85       	ldd	r18, Y+12	; 0x0c
     f5c:	23 ff       	sbrs	r18, 3
     f5e:	2a c0       	rjmp	.+84     	; 0xfb4 <__stack+0x6b5>
     f60:	08 e6       	ldi	r16, 0x68	; 104
     f62:	10 e0       	ldi	r17, 0x00	; 0
     f64:	39 2d       	mov	r19, r9
     f66:	30 71       	andi	r19, 0x10	; 16
     f68:	93 2e       	mov	r9, r19
     f6a:	f8 01       	movw	r30, r16
     f6c:	84 91       	lpm	r24, Z
     f6e:	81 11       	cpse	r24, r1
     f70:	24 c0       	rjmp	.+72     	; 0xfba <__stack+0x6bb>
     f72:	55 20       	and	r5, r5
     f74:	09 f4       	brne	.+2      	; 0xf78 <__stack+0x679>
     f76:	e4 cc       	rjmp	.-1592   	; 0x940 <__stack+0x41>
     f78:	b7 01       	movw	r22, r14
     f7a:	80 e2       	ldi	r24, 0x20	; 32
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     f82:	5a 94       	dec	r5
     f84:	f6 cf       	rjmp	.-20     	; 0xf72 <__stack+0x673>
     f86:	f7 01       	movw	r30, r14
     f88:	86 81       	ldd	r24, Z+6	; 0x06
     f8a:	97 81       	ldd	r25, Z+7	; 0x07
     f8c:	26 c0       	rjmp	.+76     	; 0xfda <__stack+0x6db>
     f8e:	8f ef       	ldi	r24, 0xFF	; 255
     f90:	9f ef       	ldi	r25, 0xFF	; 255
     f92:	23 c0       	rjmp	.+70     	; 0xfda <__stack+0x6db>
     f94:	b7 01       	movw	r22, r14
     f96:	80 e2       	ldi	r24, 0x20	; 32
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     f9e:	5a 94       	dec	r5
     fa0:	51 10       	cpse	r5, r1
     fa2:	f8 cf       	rjmp	.-16     	; 0xf94 <__stack+0x695>
     fa4:	d8 cf       	rjmp	.-80     	; 0xf56 <__stack+0x657>
     fa6:	51 2c       	mov	r5, r1
     fa8:	b7 01       	movw	r22, r14
     faa:	80 2f       	mov	r24, r16
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     fb2:	d3 cf       	rjmp	.-90     	; 0xf5a <__stack+0x65b>
     fb4:	0c e6       	ldi	r16, 0x6C	; 108
     fb6:	10 e0       	ldi	r17, 0x00	; 0
     fb8:	d5 cf       	rjmp	.-86     	; 0xf64 <__stack+0x665>
     fba:	91 10       	cpse	r9, r1
     fbc:	80 52       	subi	r24, 0x20	; 32
     fbe:	b7 01       	movw	r22, r14
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	0e 94 a2 09 	call	0x1344	; 0x1344 <fputc>
     fc6:	0f 5f       	subi	r16, 0xFF	; 255
     fc8:	1f 4f       	sbci	r17, 0xFF	; 255
     fca:	cf cf       	rjmp	.-98     	; 0xf6a <__stack+0x66b>
     fcc:	23 e0       	ldi	r18, 0x03	; 3
     fce:	25 15       	cp	r18, r5
     fd0:	10 f4       	brcc	.+4      	; 0xfd6 <__stack+0x6d7>
     fd2:	83 e0       	ldi	r24, 0x03	; 3
     fd4:	bd cf       	rjmp	.-134    	; 0xf50 <__stack+0x651>
     fd6:	51 2c       	mov	r5, r1
     fd8:	c0 cf       	rjmp	.-128    	; 0xf5a <__stack+0x65b>
     fda:	60 96       	adiw	r28, 0x10	; 16
     fdc:	e2 e1       	ldi	r30, 0x12	; 18
     fde:	0c 94 1c 08 	jmp	0x1038	; 0x1038 <__epilogue_restores__>

00000fe2 <__umulhisi3>:
     fe2:	a2 9f       	mul	r26, r18
     fe4:	b0 01       	movw	r22, r0
     fe6:	b3 9f       	mul	r27, r19
     fe8:	c0 01       	movw	r24, r0
     fea:	a3 9f       	mul	r26, r19
     fec:	70 0d       	add	r23, r0
     fee:	81 1d       	adc	r24, r1
     ff0:	11 24       	eor	r1, r1
     ff2:	91 1d       	adc	r25, r1
     ff4:	b2 9f       	mul	r27, r18
     ff6:	70 0d       	add	r23, r0
     ff8:	81 1d       	adc	r24, r1
     ffa:	11 24       	eor	r1, r1
     ffc:	91 1d       	adc	r25, r1
     ffe:	08 95       	ret

00001000 <__prologue_saves__>:
    1000:	2f 92       	push	r2
    1002:	3f 92       	push	r3
    1004:	4f 92       	push	r4
    1006:	5f 92       	push	r5
    1008:	6f 92       	push	r6
    100a:	7f 92       	push	r7
    100c:	8f 92       	push	r8
    100e:	9f 92       	push	r9
    1010:	af 92       	push	r10
    1012:	bf 92       	push	r11
    1014:	cf 92       	push	r12
    1016:	df 92       	push	r13
    1018:	ef 92       	push	r14
    101a:	ff 92       	push	r15
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	ca 1b       	sub	r28, r26
    102a:	db 0b       	sbc	r29, r27
    102c:	0f b6       	in	r0, 0x3f	; 63
    102e:	f8 94       	cli
    1030:	de bf       	out	0x3e, r29	; 62
    1032:	0f be       	out	0x3f, r0	; 63
    1034:	cd bf       	out	0x3d, r28	; 61
    1036:	09 94       	ijmp

00001038 <__epilogue_restores__>:
    1038:	2a 88       	ldd	r2, Y+18	; 0x12
    103a:	39 88       	ldd	r3, Y+17	; 0x11
    103c:	48 88       	ldd	r4, Y+16	; 0x10
    103e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1040:	6e 84       	ldd	r6, Y+14	; 0x0e
    1042:	7d 84       	ldd	r7, Y+13	; 0x0d
    1044:	8c 84       	ldd	r8, Y+12	; 0x0c
    1046:	9b 84       	ldd	r9, Y+11	; 0x0b
    1048:	aa 84       	ldd	r10, Y+10	; 0x0a
    104a:	b9 84       	ldd	r11, Y+9	; 0x09
    104c:	c8 84       	ldd	r12, Y+8	; 0x08
    104e:	df 80       	ldd	r13, Y+7	; 0x07
    1050:	ee 80       	ldd	r14, Y+6	; 0x06
    1052:	fd 80       	ldd	r15, Y+5	; 0x05
    1054:	0c 81       	ldd	r16, Y+4	; 0x04
    1056:	1b 81       	ldd	r17, Y+3	; 0x03
    1058:	aa 81       	ldd	r26, Y+2	; 0x02
    105a:	b9 81       	ldd	r27, Y+1	; 0x01
    105c:	ce 0f       	add	r28, r30
    105e:	d1 1d       	adc	r29, r1
    1060:	0f b6       	in	r0, 0x3f	; 63
    1062:	f8 94       	cli
    1064:	de bf       	out	0x3e, r29	; 62
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	cd bf       	out	0x3d, r28	; 61
    106a:	ed 01       	movw	r28, r26
    106c:	08 95       	ret

0000106e <dtostrf>:
    106e:	ef 92       	push	r14
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	e8 01       	movw	r28, r16
    107a:	47 fd       	sbrc	r20, 7
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <dtostrf+0x14>
    107e:	34 e0       	ldi	r19, 0x04	; 4
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <dtostrf+0x16>
    1082:	34 e1       	ldi	r19, 0x14	; 20
    1084:	04 2e       	mov	r0, r20
    1086:	00 0c       	add	r0, r0
    1088:	55 0b       	sbc	r21, r21
    108a:	57 ff       	sbrs	r21, 7
    108c:	03 c0       	rjmp	.+6      	; 0x1094 <dtostrf+0x26>
    108e:	51 95       	neg	r21
    1090:	41 95       	neg	r20
    1092:	51 09       	sbc	r21, r1
    1094:	e3 2e       	mov	r14, r19
    1096:	02 2f       	mov	r16, r18
    1098:	24 2f       	mov	r18, r20
    109a:	ae 01       	movw	r20, r28
    109c:	0e 94 3c 0a 	call	0x1478	; 0x1478 <dtoa_prf>
    10a0:	ce 01       	movw	r24, r28
    10a2:	df 91       	pop	r29
    10a4:	cf 91       	pop	r28
    10a6:	1f 91       	pop	r17
    10a8:	0f 91       	pop	r16
    10aa:	ef 90       	pop	r14
    10ac:	08 95       	ret

000010ae <atoi>:
    10ae:	fc 01       	movw	r30, r24
    10b0:	88 27       	eor	r24, r24
    10b2:	99 27       	eor	r25, r25
    10b4:	e8 94       	clt
    10b6:	21 91       	ld	r18, Z+
    10b8:	20 32       	cpi	r18, 0x20	; 32
    10ba:	e9 f3       	breq	.-6      	; 0x10b6 <atoi+0x8>
    10bc:	29 30       	cpi	r18, 0x09	; 9
    10be:	10 f0       	brcs	.+4      	; 0x10c4 <atoi+0x16>
    10c0:	2e 30       	cpi	r18, 0x0E	; 14
    10c2:	c8 f3       	brcs	.-14     	; 0x10b6 <atoi+0x8>
    10c4:	2b 32       	cpi	r18, 0x2B	; 43
    10c6:	41 f0       	breq	.+16     	; 0x10d8 <atoi+0x2a>
    10c8:	2d 32       	cpi	r18, 0x2D	; 45
    10ca:	39 f4       	brne	.+14     	; 0x10da <atoi+0x2c>
    10cc:	68 94       	set
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <atoi+0x2a>
    10d0:	0e 94 80 09 	call	0x1300	; 0x1300 <__mulhi_const_10>
    10d4:	82 0f       	add	r24, r18
    10d6:	91 1d       	adc	r25, r1
    10d8:	21 91       	ld	r18, Z+
    10da:	20 53       	subi	r18, 0x30	; 48
    10dc:	2a 30       	cpi	r18, 0x0A	; 10
    10de:	c0 f3       	brcs	.-16     	; 0x10d0 <atoi+0x22>
    10e0:	1e f4       	brtc	.+6      	; 0x10e8 <atoi+0x3a>
    10e2:	90 95       	com	r25
    10e4:	81 95       	neg	r24
    10e6:	9f 4f       	sbci	r25, 0xFF	; 255
    10e8:	08 95       	ret

000010ea <__ftoa_engine>:
    10ea:	28 30       	cpi	r18, 0x08	; 8
    10ec:	08 f0       	brcs	.+2      	; 0x10f0 <__ftoa_engine+0x6>
    10ee:	27 e0       	ldi	r18, 0x07	; 7
    10f0:	33 27       	eor	r19, r19
    10f2:	da 01       	movw	r26, r20
    10f4:	99 0f       	add	r25, r25
    10f6:	31 1d       	adc	r19, r1
    10f8:	87 fd       	sbrc	r24, 7
    10fa:	91 60       	ori	r25, 0x01	; 1
    10fc:	00 96       	adiw	r24, 0x00	; 0
    10fe:	61 05       	cpc	r22, r1
    1100:	71 05       	cpc	r23, r1
    1102:	39 f4       	brne	.+14     	; 0x1112 <__ftoa_engine+0x28>
    1104:	32 60       	ori	r19, 0x02	; 2
    1106:	2e 5f       	subi	r18, 0xFE	; 254
    1108:	3d 93       	st	X+, r19
    110a:	30 e3       	ldi	r19, 0x30	; 48
    110c:	2a 95       	dec	r18
    110e:	e1 f7       	brne	.-8      	; 0x1108 <__ftoa_engine+0x1e>
    1110:	08 95       	ret
    1112:	9f 3f       	cpi	r25, 0xFF	; 255
    1114:	30 f0       	brcs	.+12     	; 0x1122 <__ftoa_engine+0x38>
    1116:	80 38       	cpi	r24, 0x80	; 128
    1118:	71 05       	cpc	r23, r1
    111a:	61 05       	cpc	r22, r1
    111c:	09 f0       	breq	.+2      	; 0x1120 <__ftoa_engine+0x36>
    111e:	3c 5f       	subi	r19, 0xFC	; 252
    1120:	3c 5f       	subi	r19, 0xFC	; 252
    1122:	3d 93       	st	X+, r19
    1124:	91 30       	cpi	r25, 0x01	; 1
    1126:	08 f0       	brcs	.+2      	; 0x112a <__ftoa_engine+0x40>
    1128:	80 68       	ori	r24, 0x80	; 128
    112a:	91 1d       	adc	r25, r1
    112c:	df 93       	push	r29
    112e:	cf 93       	push	r28
    1130:	1f 93       	push	r17
    1132:	0f 93       	push	r16
    1134:	ff 92       	push	r15
    1136:	ef 92       	push	r14
    1138:	19 2f       	mov	r17, r25
    113a:	98 7f       	andi	r25, 0xF8	; 248
    113c:	96 95       	lsr	r25
    113e:	e9 2f       	mov	r30, r25
    1140:	96 95       	lsr	r25
    1142:	96 95       	lsr	r25
    1144:	e9 0f       	add	r30, r25
    1146:	ff 27       	eor	r31, r31
    1148:	e6 53       	subi	r30, 0x36	; 54
    114a:	ff 4f       	sbci	r31, 0xFF	; 255
    114c:	99 27       	eor	r25, r25
    114e:	33 27       	eor	r19, r19
    1150:	ee 24       	eor	r14, r14
    1152:	ff 24       	eor	r15, r15
    1154:	a7 01       	movw	r20, r14
    1156:	e7 01       	movw	r28, r14
    1158:	05 90       	lpm	r0, Z+
    115a:	08 94       	sec
    115c:	07 94       	ror	r0
    115e:	28 f4       	brcc	.+10     	; 0x116a <__ftoa_engine+0x80>
    1160:	36 0f       	add	r19, r22
    1162:	e7 1e       	adc	r14, r23
    1164:	f8 1e       	adc	r15, r24
    1166:	49 1f       	adc	r20, r25
    1168:	51 1d       	adc	r21, r1
    116a:	66 0f       	add	r22, r22
    116c:	77 1f       	adc	r23, r23
    116e:	88 1f       	adc	r24, r24
    1170:	99 1f       	adc	r25, r25
    1172:	06 94       	lsr	r0
    1174:	a1 f7       	brne	.-24     	; 0x115e <__ftoa_engine+0x74>
    1176:	05 90       	lpm	r0, Z+
    1178:	07 94       	ror	r0
    117a:	28 f4       	brcc	.+10     	; 0x1186 <__ftoa_engine+0x9c>
    117c:	e7 0e       	add	r14, r23
    117e:	f8 1e       	adc	r15, r24
    1180:	49 1f       	adc	r20, r25
    1182:	56 1f       	adc	r21, r22
    1184:	c1 1d       	adc	r28, r1
    1186:	77 0f       	add	r23, r23
    1188:	88 1f       	adc	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	66 1f       	adc	r22, r22
    118e:	06 94       	lsr	r0
    1190:	a1 f7       	brne	.-24     	; 0x117a <__ftoa_engine+0x90>
    1192:	05 90       	lpm	r0, Z+
    1194:	07 94       	ror	r0
    1196:	28 f4       	brcc	.+10     	; 0x11a2 <__ftoa_engine+0xb8>
    1198:	f8 0e       	add	r15, r24
    119a:	49 1f       	adc	r20, r25
    119c:	56 1f       	adc	r21, r22
    119e:	c7 1f       	adc	r28, r23
    11a0:	d1 1d       	adc	r29, r1
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	66 1f       	adc	r22, r22
    11a8:	77 1f       	adc	r23, r23
    11aa:	06 94       	lsr	r0
    11ac:	a1 f7       	brne	.-24     	; 0x1196 <__ftoa_engine+0xac>
    11ae:	05 90       	lpm	r0, Z+
    11b0:	07 94       	ror	r0
    11b2:	20 f4       	brcc	.+8      	; 0x11bc <__ftoa_engine+0xd2>
    11b4:	49 0f       	add	r20, r25
    11b6:	56 1f       	adc	r21, r22
    11b8:	c7 1f       	adc	r28, r23
    11ba:	d8 1f       	adc	r29, r24
    11bc:	99 0f       	add	r25, r25
    11be:	66 1f       	adc	r22, r22
    11c0:	77 1f       	adc	r23, r23
    11c2:	88 1f       	adc	r24, r24
    11c4:	06 94       	lsr	r0
    11c6:	a9 f7       	brne	.-22     	; 0x11b2 <__ftoa_engine+0xc8>
    11c8:	84 91       	lpm	r24, Z
    11ca:	10 95       	com	r17
    11cc:	17 70       	andi	r17, 0x07	; 7
    11ce:	41 f0       	breq	.+16     	; 0x11e0 <__ftoa_engine+0xf6>
    11d0:	d6 95       	lsr	r29
    11d2:	c7 95       	ror	r28
    11d4:	57 95       	ror	r21
    11d6:	47 95       	ror	r20
    11d8:	f7 94       	ror	r15
    11da:	e7 94       	ror	r14
    11dc:	1a 95       	dec	r17
    11de:	c1 f7       	brne	.-16     	; 0x11d0 <__ftoa_engine+0xe6>
    11e0:	e0 e7       	ldi	r30, 0x70	; 112
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	68 94       	set
    11e6:	15 90       	lpm	r1, Z+
    11e8:	15 91       	lpm	r17, Z+
    11ea:	35 91       	lpm	r19, Z+
    11ec:	65 91       	lpm	r22, Z+
    11ee:	95 91       	lpm	r25, Z+
    11f0:	05 90       	lpm	r0, Z+
    11f2:	7f e2       	ldi	r23, 0x2F	; 47
    11f4:	73 95       	inc	r23
    11f6:	e1 18       	sub	r14, r1
    11f8:	f1 0a       	sbc	r15, r17
    11fa:	43 0b       	sbc	r20, r19
    11fc:	56 0b       	sbc	r21, r22
    11fe:	c9 0b       	sbc	r28, r25
    1200:	d0 09       	sbc	r29, r0
    1202:	c0 f7       	brcc	.-16     	; 0x11f4 <__ftoa_engine+0x10a>
    1204:	e1 0c       	add	r14, r1
    1206:	f1 1e       	adc	r15, r17
    1208:	43 1f       	adc	r20, r19
    120a:	56 1f       	adc	r21, r22
    120c:	c9 1f       	adc	r28, r25
    120e:	d0 1d       	adc	r29, r0
    1210:	7e f4       	brtc	.+30     	; 0x1230 <__ftoa_engine+0x146>
    1212:	70 33       	cpi	r23, 0x30	; 48
    1214:	11 f4       	brne	.+4      	; 0x121a <__ftoa_engine+0x130>
    1216:	8a 95       	dec	r24
    1218:	e6 cf       	rjmp	.-52     	; 0x11e6 <__ftoa_engine+0xfc>
    121a:	e8 94       	clt
    121c:	01 50       	subi	r16, 0x01	; 1
    121e:	30 f0       	brcs	.+12     	; 0x122c <__ftoa_engine+0x142>
    1220:	08 0f       	add	r16, r24
    1222:	0a f4       	brpl	.+2      	; 0x1226 <__ftoa_engine+0x13c>
    1224:	00 27       	eor	r16, r16
    1226:	02 17       	cp	r16, r18
    1228:	08 f4       	brcc	.+2      	; 0x122c <__ftoa_engine+0x142>
    122a:	20 2f       	mov	r18, r16
    122c:	23 95       	inc	r18
    122e:	02 2f       	mov	r16, r18
    1230:	7a 33       	cpi	r23, 0x3A	; 58
    1232:	28 f0       	brcs	.+10     	; 0x123e <__ftoa_engine+0x154>
    1234:	79 e3       	ldi	r23, 0x39	; 57
    1236:	7d 93       	st	X+, r23
    1238:	2a 95       	dec	r18
    123a:	e9 f7       	brne	.-6      	; 0x1236 <__ftoa_engine+0x14c>
    123c:	10 c0       	rjmp	.+32     	; 0x125e <__ftoa_engine+0x174>
    123e:	7d 93       	st	X+, r23
    1240:	2a 95       	dec	r18
    1242:	89 f6       	brne	.-94     	; 0x11e6 <__ftoa_engine+0xfc>
    1244:	06 94       	lsr	r0
    1246:	97 95       	ror	r25
    1248:	67 95       	ror	r22
    124a:	37 95       	ror	r19
    124c:	17 95       	ror	r17
    124e:	17 94       	ror	r1
    1250:	e1 18       	sub	r14, r1
    1252:	f1 0a       	sbc	r15, r17
    1254:	43 0b       	sbc	r20, r19
    1256:	56 0b       	sbc	r21, r22
    1258:	c9 0b       	sbc	r28, r25
    125a:	d0 09       	sbc	r29, r0
    125c:	98 f0       	brcs	.+38     	; 0x1284 <__ftoa_engine+0x19a>
    125e:	23 95       	inc	r18
    1260:	7e 91       	ld	r23, -X
    1262:	73 95       	inc	r23
    1264:	7a 33       	cpi	r23, 0x3A	; 58
    1266:	08 f0       	brcs	.+2      	; 0x126a <__ftoa_engine+0x180>
    1268:	70 e3       	ldi	r23, 0x30	; 48
    126a:	7c 93       	st	X, r23
    126c:	20 13       	cpse	r18, r16
    126e:	b8 f7       	brcc	.-18     	; 0x125e <__ftoa_engine+0x174>
    1270:	7e 91       	ld	r23, -X
    1272:	70 61       	ori	r23, 0x10	; 16
    1274:	7d 93       	st	X+, r23
    1276:	30 f0       	brcs	.+12     	; 0x1284 <__ftoa_engine+0x19a>
    1278:	83 95       	inc	r24
    127a:	71 e3       	ldi	r23, 0x31	; 49
    127c:	7d 93       	st	X+, r23
    127e:	70 e3       	ldi	r23, 0x30	; 48
    1280:	2a 95       	dec	r18
    1282:	e1 f7       	brne	.-8      	; 0x127c <__ftoa_engine+0x192>
    1284:	11 24       	eor	r1, r1
    1286:	ef 90       	pop	r14
    1288:	ff 90       	pop	r15
    128a:	0f 91       	pop	r16
    128c:	1f 91       	pop	r17
    128e:	cf 91       	pop	r28
    1290:	df 91       	pop	r29
    1292:	99 27       	eor	r25, r25
    1294:	87 fd       	sbrc	r24, 7
    1296:	90 95       	com	r25
    1298:	08 95       	ret

0000129a <strnlen_P>:
    129a:	fc 01       	movw	r30, r24
    129c:	05 90       	lpm	r0, Z+
    129e:	61 50       	subi	r22, 0x01	; 1
    12a0:	70 40       	sbci	r23, 0x00	; 0
    12a2:	01 10       	cpse	r0, r1
    12a4:	d8 f7       	brcc	.-10     	; 0x129c <strnlen_P+0x2>
    12a6:	80 95       	com	r24
    12a8:	90 95       	com	r25
    12aa:	8e 0f       	add	r24, r30
    12ac:	9f 1f       	adc	r25, r31
    12ae:	08 95       	ret

000012b0 <strchr>:
    12b0:	fc 01       	movw	r30, r24
    12b2:	81 91       	ld	r24, Z+
    12b4:	86 17       	cp	r24, r22
    12b6:	21 f0       	breq	.+8      	; 0x12c0 <strchr+0x10>
    12b8:	88 23       	and	r24, r24
    12ba:	d9 f7       	brne	.-10     	; 0x12b2 <strchr+0x2>
    12bc:	99 27       	eor	r25, r25
    12be:	08 95       	ret
    12c0:	31 97       	sbiw	r30, 0x01	; 1
    12c2:	cf 01       	movw	r24, r30
    12c4:	08 95       	ret

000012c6 <strcpy>:
    12c6:	fb 01       	movw	r30, r22
    12c8:	dc 01       	movw	r26, r24
    12ca:	01 90       	ld	r0, Z+
    12cc:	0d 92       	st	X+, r0
    12ce:	00 20       	and	r0, r0
    12d0:	e1 f7       	brne	.-8      	; 0x12ca <strcpy+0x4>
    12d2:	08 95       	ret

000012d4 <strnlen>:
    12d4:	fc 01       	movw	r30, r24
    12d6:	61 50       	subi	r22, 0x01	; 1
    12d8:	70 40       	sbci	r23, 0x00	; 0
    12da:	01 90       	ld	r0, Z+
    12dc:	01 10       	cpse	r0, r1
    12de:	d8 f7       	brcc	.-10     	; 0x12d6 <strnlen+0x2>
    12e0:	80 95       	com	r24
    12e2:	90 95       	com	r25
    12e4:	8e 0f       	add	r24, r30
    12e6:	9f 1f       	adc	r25, r31
    12e8:	08 95       	ret

000012ea <__itoa_ncheck>:
    12ea:	bb 27       	eor	r27, r27
    12ec:	4a 30       	cpi	r20, 0x0A	; 10
    12ee:	31 f4       	brne	.+12     	; 0x12fc <__itoa_ncheck+0x12>
    12f0:	99 23       	and	r25, r25
    12f2:	22 f4       	brpl	.+8      	; 0x12fc <__itoa_ncheck+0x12>
    12f4:	bd e2       	ldi	r27, 0x2D	; 45
    12f6:	90 95       	com	r25
    12f8:	81 95       	neg	r24
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__utoa_common>

00001300 <__mulhi_const_10>:
    1300:	7a e0       	ldi	r23, 0x0A	; 10
    1302:	97 9f       	mul	r25, r23
    1304:	90 2d       	mov	r25, r0
    1306:	87 9f       	mul	r24, r23
    1308:	80 2d       	mov	r24, r0
    130a:	91 0d       	add	r25, r1
    130c:	11 24       	eor	r1, r1
    130e:	08 95       	ret

00001310 <__utoa_ncheck>:
    1310:	bb 27       	eor	r27, r27

00001312 <__utoa_common>:
    1312:	fb 01       	movw	r30, r22
    1314:	55 27       	eor	r21, r21
    1316:	aa 27       	eor	r26, r26
    1318:	88 0f       	add	r24, r24
    131a:	99 1f       	adc	r25, r25
    131c:	aa 1f       	adc	r26, r26
    131e:	a4 17       	cp	r26, r20
    1320:	10 f0       	brcs	.+4      	; 0x1326 <__utoa_common+0x14>
    1322:	a4 1b       	sub	r26, r20
    1324:	83 95       	inc	r24
    1326:	50 51       	subi	r21, 0x10	; 16
    1328:	b9 f7       	brne	.-18     	; 0x1318 <__utoa_common+0x6>
    132a:	a0 5d       	subi	r26, 0xD0	; 208
    132c:	aa 33       	cpi	r26, 0x3A	; 58
    132e:	08 f0       	brcs	.+2      	; 0x1332 <__utoa_common+0x20>
    1330:	a9 5d       	subi	r26, 0xD9	; 217
    1332:	a1 93       	st	Z+, r26
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	79 f7       	brne	.-34     	; 0x1316 <__utoa_common+0x4>
    1338:	b1 11       	cpse	r27, r1
    133a:	b1 93       	st	Z+, r27
    133c:	11 92       	st	Z+, r1
    133e:	cb 01       	movw	r24, r22
    1340:	0c 94 96 0b 	jmp	0x172c	; 0x172c <strrev>

00001344 <fputc>:
    1344:	0f 93       	push	r16
    1346:	1f 93       	push	r17
    1348:	cf 93       	push	r28
    134a:	df 93       	push	r29
    134c:	fb 01       	movw	r30, r22
    134e:	23 81       	ldd	r18, Z+3	; 0x03
    1350:	21 fd       	sbrc	r18, 1
    1352:	03 c0       	rjmp	.+6      	; 0x135a <fputc+0x16>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	9f ef       	ldi	r25, 0xFF	; 255
    1358:	2c c0       	rjmp	.+88     	; 0x13b2 <fputc+0x6e>
    135a:	22 ff       	sbrs	r18, 2
    135c:	16 c0       	rjmp	.+44     	; 0x138a <fputc+0x46>
    135e:	46 81       	ldd	r20, Z+6	; 0x06
    1360:	57 81       	ldd	r21, Z+7	; 0x07
    1362:	24 81       	ldd	r18, Z+4	; 0x04
    1364:	35 81       	ldd	r19, Z+5	; 0x05
    1366:	42 17       	cp	r20, r18
    1368:	53 07       	cpc	r21, r19
    136a:	44 f4       	brge	.+16     	; 0x137c <fputc+0x38>
    136c:	a0 81       	ld	r26, Z
    136e:	b1 81       	ldd	r27, Z+1	; 0x01
    1370:	9d 01       	movw	r18, r26
    1372:	2f 5f       	subi	r18, 0xFF	; 255
    1374:	3f 4f       	sbci	r19, 0xFF	; 255
    1376:	31 83       	std	Z+1, r19	; 0x01
    1378:	20 83       	st	Z, r18
    137a:	8c 93       	st	X, r24
    137c:	26 81       	ldd	r18, Z+6	; 0x06
    137e:	37 81       	ldd	r19, Z+7	; 0x07
    1380:	2f 5f       	subi	r18, 0xFF	; 255
    1382:	3f 4f       	sbci	r19, 0xFF	; 255
    1384:	37 83       	std	Z+7, r19	; 0x07
    1386:	26 83       	std	Z+6, r18	; 0x06
    1388:	14 c0       	rjmp	.+40     	; 0x13b2 <fputc+0x6e>
    138a:	8b 01       	movw	r16, r22
    138c:	ec 01       	movw	r28, r24
    138e:	fb 01       	movw	r30, r22
    1390:	00 84       	ldd	r0, Z+8	; 0x08
    1392:	f1 85       	ldd	r31, Z+9	; 0x09
    1394:	e0 2d       	mov	r30, r0
    1396:	09 95       	icall
    1398:	89 2b       	or	r24, r25
    139a:	e1 f6       	brne	.-72     	; 0x1354 <fputc+0x10>
    139c:	d8 01       	movw	r26, r16
    139e:	16 96       	adiw	r26, 0x06	; 6
    13a0:	8d 91       	ld	r24, X+
    13a2:	9c 91       	ld	r25, X
    13a4:	17 97       	sbiw	r26, 0x07	; 7
    13a6:	01 96       	adiw	r24, 0x01	; 1
    13a8:	17 96       	adiw	r26, 0x07	; 7
    13aa:	9c 93       	st	X, r25
    13ac:	8e 93       	st	-X, r24
    13ae:	16 97       	sbiw	r26, 0x06	; 6
    13b0:	ce 01       	movw	r24, r28
    13b2:	df 91       	pop	r29
    13b4:	cf 91       	pop	r28
    13b6:	1f 91       	pop	r17
    13b8:	0f 91       	pop	r16
    13ba:	08 95       	ret

000013bc <__ultoa_invert>:
    13bc:	fa 01       	movw	r30, r20
    13be:	aa 27       	eor	r26, r26
    13c0:	28 30       	cpi	r18, 0x08	; 8
    13c2:	51 f1       	breq	.+84     	; 0x1418 <__ultoa_invert+0x5c>
    13c4:	20 31       	cpi	r18, 0x10	; 16
    13c6:	81 f1       	breq	.+96     	; 0x1428 <__ultoa_invert+0x6c>
    13c8:	e8 94       	clt
    13ca:	6f 93       	push	r22
    13cc:	6e 7f       	andi	r22, 0xFE	; 254
    13ce:	6e 5f       	subi	r22, 0xFE	; 254
    13d0:	7f 4f       	sbci	r23, 0xFF	; 255
    13d2:	8f 4f       	sbci	r24, 0xFF	; 255
    13d4:	9f 4f       	sbci	r25, 0xFF	; 255
    13d6:	af 4f       	sbci	r26, 0xFF	; 255
    13d8:	b1 e0       	ldi	r27, 0x01	; 1
    13da:	3e d0       	rcall	.+124    	; 0x1458 <__ultoa_invert+0x9c>
    13dc:	b4 e0       	ldi	r27, 0x04	; 4
    13de:	3c d0       	rcall	.+120    	; 0x1458 <__ultoa_invert+0x9c>
    13e0:	67 0f       	add	r22, r23
    13e2:	78 1f       	adc	r23, r24
    13e4:	89 1f       	adc	r24, r25
    13e6:	9a 1f       	adc	r25, r26
    13e8:	a1 1d       	adc	r26, r1
    13ea:	68 0f       	add	r22, r24
    13ec:	79 1f       	adc	r23, r25
    13ee:	8a 1f       	adc	r24, r26
    13f0:	91 1d       	adc	r25, r1
    13f2:	a1 1d       	adc	r26, r1
    13f4:	6a 0f       	add	r22, r26
    13f6:	71 1d       	adc	r23, r1
    13f8:	81 1d       	adc	r24, r1
    13fa:	91 1d       	adc	r25, r1
    13fc:	a1 1d       	adc	r26, r1
    13fe:	20 d0       	rcall	.+64     	; 0x1440 <__ultoa_invert+0x84>
    1400:	09 f4       	brne	.+2      	; 0x1404 <__ultoa_invert+0x48>
    1402:	68 94       	set
    1404:	3f 91       	pop	r19
    1406:	2a e0       	ldi	r18, 0x0A	; 10
    1408:	26 9f       	mul	r18, r22
    140a:	11 24       	eor	r1, r1
    140c:	30 19       	sub	r19, r0
    140e:	30 5d       	subi	r19, 0xD0	; 208
    1410:	31 93       	st	Z+, r19
    1412:	de f6       	brtc	.-74     	; 0x13ca <__ultoa_invert+0xe>
    1414:	cf 01       	movw	r24, r30
    1416:	08 95       	ret
    1418:	46 2f       	mov	r20, r22
    141a:	47 70       	andi	r20, 0x07	; 7
    141c:	40 5d       	subi	r20, 0xD0	; 208
    141e:	41 93       	st	Z+, r20
    1420:	b3 e0       	ldi	r27, 0x03	; 3
    1422:	0f d0       	rcall	.+30     	; 0x1442 <__ultoa_invert+0x86>
    1424:	c9 f7       	brne	.-14     	; 0x1418 <__ultoa_invert+0x5c>
    1426:	f6 cf       	rjmp	.-20     	; 0x1414 <__ultoa_invert+0x58>
    1428:	46 2f       	mov	r20, r22
    142a:	4f 70       	andi	r20, 0x0F	; 15
    142c:	40 5d       	subi	r20, 0xD0	; 208
    142e:	4a 33       	cpi	r20, 0x3A	; 58
    1430:	18 f0       	brcs	.+6      	; 0x1438 <__ultoa_invert+0x7c>
    1432:	49 5d       	subi	r20, 0xD9	; 217
    1434:	31 fd       	sbrc	r19, 1
    1436:	40 52       	subi	r20, 0x20	; 32
    1438:	41 93       	st	Z+, r20
    143a:	02 d0       	rcall	.+4      	; 0x1440 <__ultoa_invert+0x84>
    143c:	a9 f7       	brne	.-22     	; 0x1428 <__ultoa_invert+0x6c>
    143e:	ea cf       	rjmp	.-44     	; 0x1414 <__ultoa_invert+0x58>
    1440:	b4 e0       	ldi	r27, 0x04	; 4
    1442:	a6 95       	lsr	r26
    1444:	97 95       	ror	r25
    1446:	87 95       	ror	r24
    1448:	77 95       	ror	r23
    144a:	67 95       	ror	r22
    144c:	ba 95       	dec	r27
    144e:	c9 f7       	brne	.-14     	; 0x1442 <__ultoa_invert+0x86>
    1450:	00 97       	sbiw	r24, 0x00	; 0
    1452:	61 05       	cpc	r22, r1
    1454:	71 05       	cpc	r23, r1
    1456:	08 95       	ret
    1458:	9b 01       	movw	r18, r22
    145a:	ac 01       	movw	r20, r24
    145c:	0a 2e       	mov	r0, r26
    145e:	06 94       	lsr	r0
    1460:	57 95       	ror	r21
    1462:	47 95       	ror	r20
    1464:	37 95       	ror	r19
    1466:	27 95       	ror	r18
    1468:	ba 95       	dec	r27
    146a:	c9 f7       	brne	.-14     	; 0x145e <__ultoa_invert+0xa2>
    146c:	62 0f       	add	r22, r18
    146e:	73 1f       	adc	r23, r19
    1470:	84 1f       	adc	r24, r20
    1472:	95 1f       	adc	r25, r21
    1474:	a0 1d       	adc	r26, r0
    1476:	08 95       	ret

00001478 <dtoa_prf>:
    1478:	a9 e0       	ldi	r26, 0x09	; 9
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	e2 e4       	ldi	r30, 0x42	; 66
    147e:	fa e0       	ldi	r31, 0x0A	; 10
    1480:	0c 94 06 08 	jmp	0x100c	; 0x100c <__prologue_saves__+0xc>
    1484:	6a 01       	movw	r12, r20
    1486:	12 2f       	mov	r17, r18
    1488:	b0 2e       	mov	r11, r16
    148a:	2b e3       	ldi	r18, 0x3B	; 59
    148c:	20 17       	cp	r18, r16
    148e:	20 f0       	brcs	.+8      	; 0x1498 <dtoa_prf+0x20>
    1490:	ff 24       	eor	r15, r15
    1492:	f3 94       	inc	r15
    1494:	f0 0e       	add	r15, r16
    1496:	02 c0       	rjmp	.+4      	; 0x149c <dtoa_prf+0x24>
    1498:	2c e3       	ldi	r18, 0x3C	; 60
    149a:	f2 2e       	mov	r15, r18
    149c:	0f 2d       	mov	r16, r15
    149e:	27 e0       	ldi	r18, 0x07	; 7
    14a0:	ae 01       	movw	r20, r28
    14a2:	4f 5f       	subi	r20, 0xFF	; 255
    14a4:	5f 4f       	sbci	r21, 0xFF	; 255
    14a6:	0e 94 75 08 	call	0x10ea	; 0x10ea <__ftoa_engine>
    14aa:	bc 01       	movw	r22, r24
    14ac:	49 81       	ldd	r20, Y+1	; 0x01
    14ae:	84 2f       	mov	r24, r20
    14b0:	89 70       	andi	r24, 0x09	; 9
    14b2:	81 30       	cpi	r24, 0x01	; 1
    14b4:	31 f0       	breq	.+12     	; 0x14c2 <dtoa_prf+0x4a>
    14b6:	e1 fc       	sbrc	r14, 1
    14b8:	06 c0       	rjmp	.+12     	; 0x14c6 <dtoa_prf+0x4e>
    14ba:	e0 fe       	sbrs	r14, 0
    14bc:	06 c0       	rjmp	.+12     	; 0x14ca <dtoa_prf+0x52>
    14be:	90 e2       	ldi	r25, 0x20	; 32
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <dtoa_prf+0x54>
    14c2:	9d e2       	ldi	r25, 0x2D	; 45
    14c4:	03 c0       	rjmp	.+6      	; 0x14cc <dtoa_prf+0x54>
    14c6:	9b e2       	ldi	r25, 0x2B	; 43
    14c8:	01 c0       	rjmp	.+2      	; 0x14cc <dtoa_prf+0x54>
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	5e 2d       	mov	r21, r14
    14ce:	50 71       	andi	r21, 0x10	; 16
    14d0:	43 ff       	sbrs	r20, 3
    14d2:	3c c0       	rjmp	.+120    	; 0x154c <dtoa_prf+0xd4>
    14d4:	91 11       	cpse	r25, r1
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <dtoa_prf+0x64>
    14d8:	83 e0       	ldi	r24, 0x03	; 3
    14da:	01 c0       	rjmp	.+2      	; 0x14de <dtoa_prf+0x66>
    14dc:	84 e0       	ldi	r24, 0x04	; 4
    14de:	81 17       	cp	r24, r17
    14e0:	18 f4       	brcc	.+6      	; 0x14e8 <dtoa_prf+0x70>
    14e2:	21 2f       	mov	r18, r17
    14e4:	28 1b       	sub	r18, r24
    14e6:	01 c0       	rjmp	.+2      	; 0x14ea <dtoa_prf+0x72>
    14e8:	20 e0       	ldi	r18, 0x00	; 0
    14ea:	51 11       	cpse	r21, r1
    14ec:	0b c0       	rjmp	.+22     	; 0x1504 <dtoa_prf+0x8c>
    14ee:	f6 01       	movw	r30, r12
    14f0:	82 2f       	mov	r24, r18
    14f2:	30 e2       	ldi	r19, 0x20	; 32
    14f4:	88 23       	and	r24, r24
    14f6:	19 f0       	breq	.+6      	; 0x14fe <dtoa_prf+0x86>
    14f8:	31 93       	st	Z+, r19
    14fa:	81 50       	subi	r24, 0x01	; 1
    14fc:	fb cf       	rjmp	.-10     	; 0x14f4 <dtoa_prf+0x7c>
    14fe:	c2 0e       	add	r12, r18
    1500:	d1 1c       	adc	r13, r1
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	99 23       	and	r25, r25
    1506:	29 f0       	breq	.+10     	; 0x1512 <dtoa_prf+0x9a>
    1508:	d6 01       	movw	r26, r12
    150a:	9c 93       	st	X, r25
    150c:	f6 01       	movw	r30, r12
    150e:	31 96       	adiw	r30, 0x01	; 1
    1510:	6f 01       	movw	r12, r30
    1512:	c6 01       	movw	r24, r12
    1514:	03 96       	adiw	r24, 0x03	; 3
    1516:	e2 fe       	sbrs	r14, 2
    1518:	0a c0       	rjmp	.+20     	; 0x152e <dtoa_prf+0xb6>
    151a:	3e e4       	ldi	r19, 0x4E	; 78
    151c:	d6 01       	movw	r26, r12
    151e:	3c 93       	st	X, r19
    1520:	41 e4       	ldi	r20, 0x41	; 65
    1522:	11 96       	adiw	r26, 0x01	; 1
    1524:	4c 93       	st	X, r20
    1526:	11 97       	sbiw	r26, 0x01	; 1
    1528:	12 96       	adiw	r26, 0x02	; 2
    152a:	3c 93       	st	X, r19
    152c:	06 c0       	rjmp	.+12     	; 0x153a <dtoa_prf+0xc2>
    152e:	3e e6       	ldi	r19, 0x6E	; 110
    1530:	f6 01       	movw	r30, r12
    1532:	30 83       	st	Z, r19
    1534:	41 e6       	ldi	r20, 0x61	; 97
    1536:	41 83       	std	Z+1, r20	; 0x01
    1538:	32 83       	std	Z+2, r19	; 0x02
    153a:	fc 01       	movw	r30, r24
    153c:	32 2f       	mov	r19, r18
    153e:	40 e2       	ldi	r20, 0x20	; 32
    1540:	33 23       	and	r19, r19
    1542:	09 f4       	brne	.+2      	; 0x1546 <dtoa_prf+0xce>
    1544:	42 c0       	rjmp	.+132    	; 0x15ca <dtoa_prf+0x152>
    1546:	41 93       	st	Z+, r20
    1548:	31 50       	subi	r19, 0x01	; 1
    154a:	fa cf       	rjmp	.-12     	; 0x1540 <dtoa_prf+0xc8>
    154c:	42 ff       	sbrs	r20, 2
    154e:	44 c0       	rjmp	.+136    	; 0x15d8 <dtoa_prf+0x160>
    1550:	91 11       	cpse	r25, r1
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <dtoa_prf+0xe0>
    1554:	83 e0       	ldi	r24, 0x03	; 3
    1556:	01 c0       	rjmp	.+2      	; 0x155a <dtoa_prf+0xe2>
    1558:	84 e0       	ldi	r24, 0x04	; 4
    155a:	81 17       	cp	r24, r17
    155c:	18 f4       	brcc	.+6      	; 0x1564 <dtoa_prf+0xec>
    155e:	21 2f       	mov	r18, r17
    1560:	28 1b       	sub	r18, r24
    1562:	01 c0       	rjmp	.+2      	; 0x1566 <dtoa_prf+0xee>
    1564:	20 e0       	ldi	r18, 0x00	; 0
    1566:	51 11       	cpse	r21, r1
    1568:	0b c0       	rjmp	.+22     	; 0x1580 <dtoa_prf+0x108>
    156a:	f6 01       	movw	r30, r12
    156c:	82 2f       	mov	r24, r18
    156e:	30 e2       	ldi	r19, 0x20	; 32
    1570:	88 23       	and	r24, r24
    1572:	19 f0       	breq	.+6      	; 0x157a <dtoa_prf+0x102>
    1574:	31 93       	st	Z+, r19
    1576:	81 50       	subi	r24, 0x01	; 1
    1578:	fb cf       	rjmp	.-10     	; 0x1570 <dtoa_prf+0xf8>
    157a:	c2 0e       	add	r12, r18
    157c:	d1 1c       	adc	r13, r1
    157e:	20 e0       	ldi	r18, 0x00	; 0
    1580:	99 23       	and	r25, r25
    1582:	29 f0       	breq	.+10     	; 0x158e <dtoa_prf+0x116>
    1584:	d6 01       	movw	r26, r12
    1586:	9c 93       	st	X, r25
    1588:	f6 01       	movw	r30, r12
    158a:	31 96       	adiw	r30, 0x01	; 1
    158c:	6f 01       	movw	r12, r30
    158e:	c6 01       	movw	r24, r12
    1590:	03 96       	adiw	r24, 0x03	; 3
    1592:	e2 fe       	sbrs	r14, 2
    1594:	0b c0       	rjmp	.+22     	; 0x15ac <dtoa_prf+0x134>
    1596:	39 e4       	ldi	r19, 0x49	; 73
    1598:	d6 01       	movw	r26, r12
    159a:	3c 93       	st	X, r19
    159c:	3e e4       	ldi	r19, 0x4E	; 78
    159e:	11 96       	adiw	r26, 0x01	; 1
    15a0:	3c 93       	st	X, r19
    15a2:	11 97       	sbiw	r26, 0x01	; 1
    15a4:	36 e4       	ldi	r19, 0x46	; 70
    15a6:	12 96       	adiw	r26, 0x02	; 2
    15a8:	3c 93       	st	X, r19
    15aa:	07 c0       	rjmp	.+14     	; 0x15ba <dtoa_prf+0x142>
    15ac:	39 e6       	ldi	r19, 0x69	; 105
    15ae:	f6 01       	movw	r30, r12
    15b0:	30 83       	st	Z, r19
    15b2:	3e e6       	ldi	r19, 0x6E	; 110
    15b4:	31 83       	std	Z+1, r19	; 0x01
    15b6:	36 e6       	ldi	r19, 0x66	; 102
    15b8:	32 83       	std	Z+2, r19	; 0x02
    15ba:	fc 01       	movw	r30, r24
    15bc:	32 2f       	mov	r19, r18
    15be:	40 e2       	ldi	r20, 0x20	; 32
    15c0:	33 23       	and	r19, r19
    15c2:	19 f0       	breq	.+6      	; 0x15ca <dtoa_prf+0x152>
    15c4:	41 93       	st	Z+, r20
    15c6:	31 50       	subi	r19, 0x01	; 1
    15c8:	fb cf       	rjmp	.-10     	; 0x15c0 <dtoa_prf+0x148>
    15ca:	fc 01       	movw	r30, r24
    15cc:	e2 0f       	add	r30, r18
    15ce:	f1 1d       	adc	r31, r1
    15d0:	10 82       	st	Z, r1
    15d2:	8e ef       	ldi	r24, 0xFE	; 254
    15d4:	9f ef       	ldi	r25, 0xFF	; 255
    15d6:	a6 c0       	rjmp	.+332    	; 0x1724 <dtoa_prf+0x2ac>
    15d8:	21 e0       	ldi	r18, 0x01	; 1
    15da:	30 e0       	ldi	r19, 0x00	; 0
    15dc:	91 11       	cpse	r25, r1
    15de:	02 c0       	rjmp	.+4      	; 0x15e4 <dtoa_prf+0x16c>
    15e0:	20 e0       	ldi	r18, 0x00	; 0
    15e2:	30 e0       	ldi	r19, 0x00	; 0
    15e4:	16 16       	cp	r1, r22
    15e6:	17 06       	cpc	r1, r23
    15e8:	1c f4       	brge	.+6      	; 0x15f0 <dtoa_prf+0x178>
    15ea:	fb 01       	movw	r30, r22
    15ec:	31 96       	adiw	r30, 0x01	; 1
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <dtoa_prf+0x17c>
    15f0:	e1 e0       	ldi	r30, 0x01	; 1
    15f2:	f0 e0       	ldi	r31, 0x00	; 0
    15f4:	2e 0f       	add	r18, r30
    15f6:	3f 1f       	adc	r19, r31
    15f8:	bb 20       	and	r11, r11
    15fa:	21 f0       	breq	.+8      	; 0x1604 <dtoa_prf+0x18c>
    15fc:	eb 2d       	mov	r30, r11
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	31 96       	adiw	r30, 0x01	; 1
    1602:	02 c0       	rjmp	.+4      	; 0x1608 <dtoa_prf+0x190>
    1604:	e0 e0       	ldi	r30, 0x00	; 0
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	2e 0f       	add	r18, r30
    160a:	3f 1f       	adc	r19, r31
    160c:	e1 2f       	mov	r30, r17
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	2e 17       	cp	r18, r30
    1612:	3f 07       	cpc	r19, r31
    1614:	1c f4       	brge	.+6      	; 0x161c <dtoa_prf+0x1a4>
    1616:	12 1b       	sub	r17, r18
    1618:	21 2f       	mov	r18, r17
    161a:	01 c0       	rjmp	.+2      	; 0x161e <dtoa_prf+0x1a6>
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	8e 2d       	mov	r24, r14
    1620:	88 71       	andi	r24, 0x18	; 24
    1622:	59 f4       	brne	.+22     	; 0x163a <dtoa_prf+0x1c2>
    1624:	f6 01       	movw	r30, r12
    1626:	82 2f       	mov	r24, r18
    1628:	30 e2       	ldi	r19, 0x20	; 32
    162a:	88 23       	and	r24, r24
    162c:	19 f0       	breq	.+6      	; 0x1634 <dtoa_prf+0x1bc>
    162e:	31 93       	st	Z+, r19
    1630:	81 50       	subi	r24, 0x01	; 1
    1632:	fb cf       	rjmp	.-10     	; 0x162a <dtoa_prf+0x1b2>
    1634:	c2 0e       	add	r12, r18
    1636:	d1 1c       	adc	r13, r1
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	99 23       	and	r25, r25
    163c:	29 f0       	breq	.+10     	; 0x1648 <dtoa_prf+0x1d0>
    163e:	d6 01       	movw	r26, r12
    1640:	9c 93       	st	X, r25
    1642:	f6 01       	movw	r30, r12
    1644:	31 96       	adiw	r30, 0x01	; 1
    1646:	6f 01       	movw	r12, r30
    1648:	51 11       	cpse	r21, r1
    164a:	0b c0       	rjmp	.+22     	; 0x1662 <dtoa_prf+0x1ea>
    164c:	f6 01       	movw	r30, r12
    164e:	82 2f       	mov	r24, r18
    1650:	90 e3       	ldi	r25, 0x30	; 48
    1652:	88 23       	and	r24, r24
    1654:	19 f0       	breq	.+6      	; 0x165c <dtoa_prf+0x1e4>
    1656:	91 93       	st	Z+, r25
    1658:	81 50       	subi	r24, 0x01	; 1
    165a:	fb cf       	rjmp	.-10     	; 0x1652 <dtoa_prf+0x1da>
    165c:	c2 0e       	add	r12, r18
    165e:	d1 1c       	adc	r13, r1
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	0f 2d       	mov	r16, r15
    1664:	06 0f       	add	r16, r22
    1666:	9a 81       	ldd	r25, Y+2	; 0x02
    1668:	34 2f       	mov	r19, r20
    166a:	30 71       	andi	r19, 0x10	; 16
    166c:	44 ff       	sbrs	r20, 4
    166e:	03 c0       	rjmp	.+6      	; 0x1676 <dtoa_prf+0x1fe>
    1670:	91 33       	cpi	r25, 0x31	; 49
    1672:	09 f4       	brne	.+2      	; 0x1676 <dtoa_prf+0x1fe>
    1674:	01 50       	subi	r16, 0x01	; 1
    1676:	10 16       	cp	r1, r16
    1678:	24 f4       	brge	.+8      	; 0x1682 <dtoa_prf+0x20a>
    167a:	09 30       	cpi	r16, 0x09	; 9
    167c:	18 f0       	brcs	.+6      	; 0x1684 <dtoa_prf+0x20c>
    167e:	08 e0       	ldi	r16, 0x08	; 8
    1680:	01 c0       	rjmp	.+2      	; 0x1684 <dtoa_prf+0x20c>
    1682:	01 e0       	ldi	r16, 0x01	; 1
    1684:	ab 01       	movw	r20, r22
    1686:	77 ff       	sbrs	r23, 7
    1688:	02 c0       	rjmp	.+4      	; 0x168e <dtoa_prf+0x216>
    168a:	40 e0       	ldi	r20, 0x00	; 0
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	fb 01       	movw	r30, r22
    1690:	e4 1b       	sub	r30, r20
    1692:	f5 0b       	sbc	r31, r21
    1694:	a1 e0       	ldi	r26, 0x01	; 1
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	ac 0f       	add	r26, r28
    169a:	bd 1f       	adc	r27, r29
    169c:	ea 0f       	add	r30, r26
    169e:	fb 1f       	adc	r31, r27
    16a0:	8e e2       	ldi	r24, 0x2E	; 46
    16a2:	a8 2e       	mov	r10, r24
    16a4:	4b 01       	movw	r8, r22
    16a6:	80 1a       	sub	r8, r16
    16a8:	91 08       	sbc	r9, r1
    16aa:	0b 2d       	mov	r16, r11
    16ac:	10 e0       	ldi	r17, 0x00	; 0
    16ae:	11 95       	neg	r17
    16b0:	01 95       	neg	r16
    16b2:	11 09       	sbc	r17, r1
    16b4:	4f 3f       	cpi	r20, 0xFF	; 255
    16b6:	bf ef       	ldi	r27, 0xFF	; 255
    16b8:	5b 07       	cpc	r21, r27
    16ba:	21 f4       	brne	.+8      	; 0x16c4 <dtoa_prf+0x24c>
    16bc:	d6 01       	movw	r26, r12
    16be:	ac 92       	st	X, r10
    16c0:	11 96       	adiw	r26, 0x01	; 1
    16c2:	6d 01       	movw	r12, r26
    16c4:	64 17       	cp	r22, r20
    16c6:	75 07       	cpc	r23, r21
    16c8:	2c f0       	brlt	.+10     	; 0x16d4 <dtoa_prf+0x25c>
    16ca:	84 16       	cp	r8, r20
    16cc:	95 06       	cpc	r9, r21
    16ce:	14 f4       	brge	.+4      	; 0x16d4 <dtoa_prf+0x25c>
    16d0:	81 81       	ldd	r24, Z+1	; 0x01
    16d2:	01 c0       	rjmp	.+2      	; 0x16d6 <dtoa_prf+0x25e>
    16d4:	80 e3       	ldi	r24, 0x30	; 48
    16d6:	41 50       	subi	r20, 0x01	; 1
    16d8:	51 09       	sbc	r21, r1
    16da:	31 96       	adiw	r30, 0x01	; 1
    16dc:	d6 01       	movw	r26, r12
    16de:	11 96       	adiw	r26, 0x01	; 1
    16e0:	7d 01       	movw	r14, r26
    16e2:	40 17       	cp	r20, r16
    16e4:	51 07       	cpc	r21, r17
    16e6:	24 f0       	brlt	.+8      	; 0x16f0 <dtoa_prf+0x278>
    16e8:	d6 01       	movw	r26, r12
    16ea:	8c 93       	st	X, r24
    16ec:	67 01       	movw	r12, r14
    16ee:	e2 cf       	rjmp	.-60     	; 0x16b4 <dtoa_prf+0x23c>
    16f0:	64 17       	cp	r22, r20
    16f2:	75 07       	cpc	r23, r21
    16f4:	39 f4       	brne	.+14     	; 0x1704 <dtoa_prf+0x28c>
    16f6:	96 33       	cpi	r25, 0x36	; 54
    16f8:	20 f4       	brcc	.+8      	; 0x1702 <dtoa_prf+0x28a>
    16fa:	95 33       	cpi	r25, 0x35	; 53
    16fc:	19 f4       	brne	.+6      	; 0x1704 <dtoa_prf+0x28c>
    16fe:	31 11       	cpse	r19, r1
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <dtoa_prf+0x28c>
    1702:	81 e3       	ldi	r24, 0x31	; 49
    1704:	f6 01       	movw	r30, r12
    1706:	80 83       	st	Z, r24
    1708:	f7 01       	movw	r30, r14
    170a:	82 2f       	mov	r24, r18
    170c:	90 e2       	ldi	r25, 0x20	; 32
    170e:	88 23       	and	r24, r24
    1710:	19 f0       	breq	.+6      	; 0x1718 <dtoa_prf+0x2a0>
    1712:	91 93       	st	Z+, r25
    1714:	81 50       	subi	r24, 0x01	; 1
    1716:	fb cf       	rjmp	.-10     	; 0x170e <dtoa_prf+0x296>
    1718:	f7 01       	movw	r30, r14
    171a:	e2 0f       	add	r30, r18
    171c:	f1 1d       	adc	r31, r1
    171e:	10 82       	st	Z, r1
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	29 96       	adiw	r28, 0x09	; 9
    1726:	ec e0       	ldi	r30, 0x0C	; 12
    1728:	0c 94 22 08 	jmp	0x1044	; 0x1044 <__epilogue_restores__+0xc>

0000172c <strrev>:
    172c:	dc 01       	movw	r26, r24
    172e:	fc 01       	movw	r30, r24
    1730:	67 2f       	mov	r22, r23
    1732:	71 91       	ld	r23, Z+
    1734:	77 23       	and	r23, r23
    1736:	e1 f7       	brne	.-8      	; 0x1730 <strrev+0x4>
    1738:	32 97       	sbiw	r30, 0x02	; 2
    173a:	04 c0       	rjmp	.+8      	; 0x1744 <strrev+0x18>
    173c:	7c 91       	ld	r23, X
    173e:	6d 93       	st	X+, r22
    1740:	70 83       	st	Z, r23
    1742:	62 91       	ld	r22, -Z
    1744:	ae 17       	cp	r26, r30
    1746:	bf 07       	cpc	r27, r31
    1748:	c8 f3       	brcs	.-14     	; 0x173c <strrev+0x10>
    174a:	08 95       	ret

0000174c <_exit>:
    174c:	f8 94       	cli

0000174e <__stop_program>:
    174e:	ff cf       	rjmp	.-2      	; 0x174e <__stop_program>
