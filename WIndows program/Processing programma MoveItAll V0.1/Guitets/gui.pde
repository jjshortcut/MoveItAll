/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:OpenBtn:840190:
  println("OpenBtn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:OpenBtn:840190:

public void button2_click1(GButton source, GEvent event) { //_CODE_:closeBtn:601186:
  println("closeBtn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:closeBtn:601186:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:412388:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:checkbox1:412388:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:783355:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield1:783355:

public void button1_click2(GButton source, GEvent event) { //_CODE_:button1:842032:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:842032:

public void button2_click2(GButton source, GEvent event) { //_CODE_:button2:679623:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button2:679623:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  OpenBtn = new GButton(this, 340, 40, 80, 30);
  OpenBtn.setText("Open");
  OpenBtn.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  OpenBtn.addEventHandler(this, "button1_click1");
  closeBtn = new GButton(this, 340, 80, 80, 30);
  closeBtn.setText("Close");
  closeBtn.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  closeBtn.addEventHandler(this, "button2_click1");
  checkbox1 = new GCheckbox(this, 50, 40, 130, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setText("Automatich bewegen");
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  textfield1 = new GTextField(this, 60, 70, 120, 20, G4P.SCROLLBARS_NONE);
  textfield1.setText("aantal");
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  button1 = new GButton(this, 250, 40, 80, 30);
  button1.setText("+");
  button1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button1.addEventHandler(this, "button1_click2");
  button2 = new GButton(this, 250, 80, 80, 30);
  button2.setText("-");
  button2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button2.addEventHandler(this, "button2_click2");
}

// Variable declarations 
// autogenerated do not edit
GButton OpenBtn; 
GButton closeBtn; 
GCheckbox checkbox1; 
GTextField textfield1; 
GButton button1; 
GButton button2; 